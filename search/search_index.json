{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>A MapLibre style is a document that defines the visual appearance of a map: what data to draw, the order to draw it in, and how to style the data when drawing it. A style document is a JSON object with specific root level and nested properties. This specification defines and describes these properties.</p> <p>The intended audience of this specification includes:</p> <ul> <li>Advanced designers and cartographers who want to write styles by hand.</li> <li>Developers using style-related features of MapLibre GL JS or the MapLibre Native for Android and iOS.</li> <li>Authors of software that generates or processes MapLibre styles.</li> </ul>"},{"location":"#style-document-structure","title":"Style document structure","text":"<p>A MapLibre style consists of a set of root properties, some of which describe a single global property, and some of which contain nested properties. Some root properties, like <code>version</code>, <code>name</code>, and <code>metadata</code>, don\u2019t have any influence over the appearance or behavior of your map, but provide important descriptive information related to your map. Others, like <code>layers</code> and <code>sources</code>, are critical and determine which map features will appear on your map and what they will look like. Some properties, like <code>center</code>, <code>zoom</code>, <code>pitch</code>, and <code>bearing</code>, provide the map renderer with a set of defaults to be used when initially displaying the map.</p>"},{"location":"deprecations/","title":"Deprecations","text":"<p>Some style properties are no longer the preferred method of accomplishing a particular styling goal. While they are still supported, it is not recommended to use them in new styles as they may not function as intended when using both deprecated and non-deprecated style properties. The following is provided as reference for users who need to continue maintaining legacy styles while transitioning to preferred style properties. The <code>gl-style-migrate</code> tool can be used to migrate style files to the latest version and replace deprecated expressions with their supported equivalents.</p> <p>In most cases of deprecated filters you should add a <code>get</code> and <code>literal</code> to convert from old to new syntax, for example <code>[\"&gt;=\", \"count\", 5]</code> should be converted to <code>[\"&gt;=\", [\"get\", \"count\"], 5]</code> and <code>[\"in\", \"nature\", \"road\", \"highway\"]</code> to <code>[\"in\", [\"get\", \"nature\"], [\"literal\", [\"road\", \"highway\"]]]</code>. </p>"},{"location":"deprecations/#function","title":"Function","text":"<p>As of v0.41.0, property expressions is the preferred method for styling features based on zoom level or the feature's properties. Zoom and property functions are still supported but are not recommended.</p> <p>The value for any layout or paint property may be specified as a function. Functions allow you to make the appearance of a map feature change with the current zoom level and/or the feature's properties.</p>"},{"location":"deprecations/#stops","title":"stops","text":"<p>Required (except for <code>identity</code> functions) array.</p> <p>A set of one input value and one output value is a \"stop.\" Stop output values must be literal values (i.e. not functions or expressions), and appropriate for the property. For example, stop output values for a <code>fill-color</code> function property must be colors.</p>"},{"location":"deprecations/#property","title":"property","text":"<p>Optional string.</p> <p>If specified, the function will take the specified feature property as an input. See Zoom Functions and Property Functions for more information.</p>"},{"location":"deprecations/#base","title":"base","text":"<p>Optional number. Default is <code>1</code>.</p> <p>The exponential base of the interpolation curve. It controls the rate at which the function output increases. Higher values make the output increase more towards the high end of the range. With values close to 1 the output increases linearly.</p>"},{"location":"deprecations/#type","title":"type","text":"<p>Optional string. One of <code>identity</code>, <code>exponential</code>, <code>interval</code>, or <code>categorical</code>.</p> <p><code>identity</code>: A function that returns its input as the output.</p> <p><code>exponential</code>: A function that generates an output by interpolating between stops just less than and just greater than the function input. The domain (input value) must be numeric, and the style property must support interpolation. Style properties that support interpolation are marked marked with, the \"exponential\" symbol, and <code>exponential</code> is the default function type for these properties.</p> <p><code>interval</code>: A function that returns the output value of the stop just less than the function input. The domain (input value) must be numeric. Any style property may use interval functions. For properties marked with, the \"interval\" symbol, this is the default function type.</p> <p><code>categorical</code> : A function that returns the output value of the stop equal to the function input.</p>"},{"location":"deprecations/#default","title":"default","text":"<p>A value to serve as a fallback function result when a value isn't otherwise available. It is used in the following circumstances:</p> <ul> <li>In categorical functions, when the feature value does not match any of the stop domain values.</li> <li>In property and zoom-and-property functions, when a feature does not contain a value for the specified property.</li> <li>In identity functions, when the feature value is not valid for the style property (for example, if the function is being used for a <code>circle-color</code> property but the feature property value is not a string or not a valid color).</li> <li>In interval or exponential property and zoom-and-property functions, when the feature value is not numeric.</li> </ul> <p>If no default is provided, the style property's default is used in these circumstances.</p>"},{"location":"deprecations/#colorspace","title":"colorSpace","text":"<p>Optional string. One of <code>rgb</code>, <code>lab</code>, <code>hcl</code>.</p> <p>The color space in which colors interpolated. Interpolating colors in perceptual color spaces like LAB and HCL tend to produce color ramps that look more consistent and produce colors that can be differentiated more easily than those interpolated in RGB space.</p> <p><code>rgb</code>: Use the RGB color space to interpolate color values</p> <p><code>lab</code>: Use the LAB color space to interpolate color values.</p> <p><code>hcl</code>: Use the HCL color space to interpolate color values, interpolating the Hue, Chroma, and Luminance channels individually.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 <code>property</code> 0.18.0 0.18.0 0.18.0 <code>code</code> 0.18.0 5.0.0 5.0.0 <code>exponential</code> type 0.18.0 5.0.0 3.5.0 <code>interval</code> type 0.18.0 5.0.0 3.5.0 <code>categorical</code> type 0.18.0 5.0.0 3.5.0 <code>identity</code> type 0.26.0 5.0.0 3.5.0 <code>default</code> 0.33.0 5.0.0 3.5.0 <code>colorSpace</code> 0.26.0"},{"location":"deprecations/#zoom-and-property-functions","title":"Zoom and Property functions","text":"<p>Zoom functions allow the appearance of a map feature to change with map\u2019s zoom level. Zoom functions can be used to create the illusion of depth and control data density. Each stop is an array with two elements: the first is a zoom level and the second is a function output value.</p> <pre><code>{\n    \"circle-radius\": {\n        \"stops\": [\n            // zoom is 5 -&gt; circle radius will be 1px\n            [5, 1],\n            // zoom is 10 -&gt; circle radius will be 2px\n            [10, 2]\n        ]\n    }\n}\n</code></pre> <p>The rendered values of color, number, and array properties are interpolated between stops. Boolean and string property values cannot be interpolated, so their rendered values only change at the specified stops.</p> <p>There is an important difference between the way that zoom functions render for layout and paint properties. Paint properties are continuously re-evaluated whenever the zoom level changes, even fractionally. The rendered value of a paint property will change, for example, as the map moves between zoom levels <code>4.1</code> and <code>4.6</code>. Layout properties, however, are evaluated only once for each integer zoom level. To continue the prior example: the rendering of a layout property will not change between zoom levels <code>4.1</code> and <code>4.6</code>, no matter what stops are specified; but at zoom level <code>5</code>, the function will be re-evaluated according to the function, and the property's rendered value will change. (You can include fractional zoom levels in a layout property zoom function, and it will affect the generated values; but, still, the rendering will only change at integer zoom levels.)</p> <p>Property functions allow the appearance of a map feature to change with its properties. Property functions can be used to visually differentiate types of features within the same layer or create data visualizations. Each stop is an array with two elements, the first is a property input value and the second is a function output value. Note that support for property functions is not available across all properties and platforms.</p> <pre><code>{\n    \"circle-color\": {\n        \"property\": \"temperature\",\n        \"stops\": [\n            // \"temperature\" is 0   -&gt; circle color will be blue\n            [0, 'blue'],\n            // \"temperature\" is 100 -&gt; circle color will be red\n            [100, 'red']\n        ]\n    }\n}\n</code></pre> <p>Zoom-and-property functions allow the appearance of a map feature to change with both its properties and zoom. Each stop is an array with two elements, the first is an object with a property input value and a zoom, and the second is a function output value. Note that support for property functions is not yet complete.</p> <pre><code>{\n    \"circle-radius\": {\n        \"property\": \"rating\",\n        \"stops\": [\n            // zoom is 0 and \"rating\" is 0 -&gt; circle radius will be 0px\n            [{zoom: 0, value: 0}, 0],\n\n            // zoom is 0 and \"rating\" is 5 -&gt; circle radius will be 5px\n            [{zoom: 0, value: 5}, 5],\n\n            // zoom is 20 and \"rating\" is 0 -&gt; circle radius will be 0px\n            [{zoom: 20, value: 0}, 0],\n\n            // zoom is 20 and \"rating\" is 5 -&gt; circle radius will be 20px\n            [{zoom: 20, value: 5}, 20]\n        ]\n    }\n}\n</code></pre>"},{"location":"deprecations/#other-filter","title":"Other filter","text":"<p>In previous versions of the style specification, <code>filters</code> were defined using the deprecated syntax documented below. Though filters defined with this syntax will continue to work, we recommend using the more flexible <code>expressions</code> syntax instead. Expression syntax and the deprecated syntax below cannot be mixed in a single filter definition.</p>"},{"location":"deprecations/#existential-filters","title":"Existential filters","text":"<p><code>[\"has\", key]</code> <code>feature[key]</code> exists</p> <p><code>[\"!has\", key]</code> <code>feature[key]</code> does not exist</p>"},{"location":"deprecations/#comparison-filters","title":"Comparison filters","text":"<p><code>[\"==\", key, value]</code> equality: <code>feature[key]</code> = <code>value</code></p> <p><code>[\"!=\", key, value]</code> inequality: <code>feature[key]</code> \u2260 <code>value</code></p> <p><code>[\"&gt;\", key, value]</code> greater than: <code>feature[key]</code> &gt; <code>value</code></p> <p><code>[\"&gt;=\", key, value]</code> greater than or equal: <code>feature[key]</code> \u2265 <code>value</code></p> <p><code>[\"&lt;\", key, value]</code> less than: <code>feature[key]</code> &lt; <code>value</code></p> <p><code>[\"&lt;=\", key, value]</code> less than or equal: <code>feature[key]</code> \u2264 <code>value</code></p>"},{"location":"deprecations/#set-membership-filters","title":"Set membership filters","text":"<p><code>[\"in\", key, v0, ..., vn]</code> set inclusion: <code>feature[key]</code> \u2208 {<code>v0</code>, ..., <code>vn</code>}</p> <p><code>[\"!in\", key, v0, ..., vn]</code> set exclusion: <code>feature[key]</code> \u2209 { <code>v0</code>, ..., <code>vn</code>}</p>"},{"location":"deprecations/#combining-filters","title":"Combining filters","text":"<p><code>[\"all\", f0, ..., fn]</code> logical <code>AND</code>: <code>f0</code> \u2227 ... \u2227 <code>fn</code></p> <p><code>[\"any\", f0, ..., fn]</code> logical OR: <code>f0</code> \u2228 ... \u2228 <code>fn</code></p> <p><code>[\"none\",</code>f0<code>, ...,</code>fn<code>]</code> logical <code>NOR</code>: \u00ac<code>f0</code> \u2227 ... \u2227 \u00ac<code>fn</code></p> <p>A <code>key</code> must be a string that identifies a feature property, or one of the following special keys:</p> <ul> <li><code>$type</code>: the feature type. This key may be used with the <code>\"==\"</code>,<code>\"!=\"</code>, <code>\"in\"</code>, and <code>\"!in\"</code> operators. Possible values are <code>\"Point\"</code>,  <code>\"LineString\"</code>, and <code>\"Polygon\"</code>.</li> <li><code>$id</code>: the feature identifier. This key may be used with the <code>\"==\"</code>,<code>\"!=\"</code>, <code>\"has\"</code>, <code>\"!has\"</code>, <code>\"in\"</code>, and <code>\"!in\"</code> operators.</li> </ul> <p>A <code>value</code> (and <code>v0</code>, ..., <code>vn</code> for set operators) must be a string, number, or boolean to compare the property value against.</p> <p>Set membership filters are a compact and efficient way to test whether a field matches any of multiple values.</p> <p>The comparison and set membership filters implement strictly-typed comparisons; for example, all of the following evaluate to false: <code>0 &lt; \"1\"</code>, <code>2 == \"2\"</code>, <code>\"true\" in [true, false]</code>.</p> <p>The <code>\"all\"</code>, <code>\"any\"</code>, and <code>\"none\"</code> filter operators are used to create compound filters. The values <code>f0</code>, ..., <code>fn</code> must be filter expressions themselves.</p> <pre><code>[\"==\", \"$type\", \"LineString\"]\n</code></pre> <p>This filter requires that the <code>class</code> property of each feature is equal to either \"street_major\", \"street_minor\", or \"street_limited\".</p> <pre><code>[\"in\", \"class\", \"street_major\", \"street_minor\", \"street_limited\"]`\n</code></pre> <p>The combining filter \"all\" takes the three other filters that follow it and requires all of them to be true for a feature to be included: a feature must have a  <code>class</code> equal to \"street_limited\", its <code>admin_level</code> must be greater than or equal to 3, and its type cannot be Polygon. You could change the combining filter to \"any\" to allow features matching any of those criteria to be included - features that are Polygons, but have a different <code>class</code> value, and so on.</p> <pre><code>[\n    \"all\",\n    [\"==\", \"class\", \"street_limited\"],\n    [\"&gt;=\", \"admin_level\", 3],\n    [\"!in\", \"$type\", \"Polygon\"]\n]\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 <code>has</code> / <code>!has</code> 0.19.0 4.1.0 3.3.0"},{"location":"expressions/","title":"Expressions","text":"<p>The value for any <code>layout</code> property, <code>paint</code> property, or <code>filter</code> property may be specified as an expression. An expression defines a formula for computing the value of the property using the operators described below. The set of expression operators provided by MapLibre includes:</p> <ul> <li>Mathematical operators for performing arithmetic and other operations on numeric values</li> <li>Logical operators for manipulating boolean values and making conditional decisions</li> <li>String operators for manipulating strings</li> <li>Data operators, providing access to the properties of source features</li> <li>Camera operators, providing access to the parameters defining the current map view</li> </ul> <p>Expressions are represented as JSON arrays. The first element of an expression array is a string naming the expression operator, e.g. <code>\"*\"</code> or <code>\"case\"</code>. Elements that follow (if any) are the arguments to the expression. Each argument is either a literal value (a string, number, boolean, or <code>null</code>), or another expression array.</p> <pre><code>[expression_name, argument_0, argument_1, ...]\n</code></pre>"},{"location":"expressions/#data-expressions","title":"Data expressions","text":"<p>A data expression is any expression that access feature data -- that is, any expression that uses one of the data operators: <code>get</code>, <code>has</code>, <code>id</code>, <code>geometry-type</code>, <code>properties</code>, or <code>feature-state</code>. Data expressions allow a feature's properties or state to determine its appearance. They can be used to differentiate features within the same layer and to create data visualizations.</p> <pre><code>{\n    \"circle-color\": [\n        \"rgb\",\n        // red is higher when feature.properties.temperature is higher\n        [\"get\", \"temperature\"],\n        // green is always zero\n        0,\n        // blue is higher when feature.properties.temperature is lower\n        [\"-\", 100, [\"get\", \"temperature\"]]\n    ]\n}\n</code></pre> <p>This example uses the <code>get</code> operator to get the <code>temperature</code> value of each feature. That value is used to compute arguments to the <code>rgb</code> operator, defining a color in terms of its red, green, and blue components.</p> <p>Data expressions are allowed as the value of the <code>filter</code> property, and as values for most paint and layout properties. However, some paint and layout properties do not yet support data expressions. The level of support is indicated by the \"data-driven styling\" row of the \"SDK Support\" table for each property. Data expressions with the <code>feature-state</code> operator are allowed only on paint properties.</p>"},{"location":"expressions/#camera-expressions","title":"Camera expressions","text":"<p>A camera expression is any expression that uses the <code>zoom</code> operator. Such expressions allow the appearance of a layer to change with the map's zoom level. Camera expressions can be used to create the appearance of depth and to control data density.</p> <pre><code>{\n    \"circle-radius\": [\n        \"interpolate\", [\"linear\"], [\"zoom\"],\n        // zoom is 5 (or less) -&gt; circle radius will be 1px\n        5, 1,\n        // zoom is 10 (or greater) -&gt; circle radius will be 5px\n        10, 5\n    ]\n}\n</code></pre> <p>This example uses the <code>interpolate</code> operator to define a linear relationship between zoom level and circle size using a set of input-output pairs. In this case, the expression indicates that the circle radius should be 1 pixel when the zoom level is 5 or below, and 5 pixels when the zoom is 10 or above. Between the two zoom levels, the circle radius will be linearly interpolated between 1 and 5 pixels</p> <p>Camera expressions are allowed anywhere an expression may be used. When a camera expression used as the value of a layout or paint property, it must be in one of the following forms:</p> <pre><code>[ \"interpolate\", interpolation, [\"zoom\"], ... ]\n</code></pre> <p>Or:</p> <pre><code>[ \"step\", [\"zoom\"], ... ]\n</code></pre> <p>Or:</p> <pre><code>[\n    \"let\",\n    ... variable bindings...,\n    [ \"interpolate\", interpolation, [\"zoom\"], ... ]\n]\n</code></pre> <p>Or:</p> <pre><code>[\n    \"let\",\n    ... variable bindings...,\n    [ \"step\", [\"zoom\"], ... ]\n]\n</code></pre> <p>That is, in layout or paint properties, <code>[\"zoom\"]</code> may appear only as the input to an outer <code>interpolate</code> or <code>step</code> expression, or such an expression within a <code>let</code> expression.</p> <p>There is an important difference between layout and paint properties in the timing of camera expression evaluation. Paint property camera expressions are re-evaluated whenever the zoom level changes, even fractionally. For example, a paint property camera expression will be re-evaluated continuously as the map moves between zoom levels 4.1 and 4.6. A layout property camera expression is evaluated only at integer zoom levels. It will not be re-evaluated as the zoom changes from 4.1 to 4.6 -- only if it goes above 5 or below 4.</p>"},{"location":"expressions/#composition","title":"Composition","text":"<p>A single expression may use a mix of data operators, camera operators, and other operators. Such composite expressions allows a layer's appearance to be determined by a combination of the zoom level and individual feature properties.</p> <pre><code>{\n    \"circle-radius\": [\n        \"interpolate\", [\"linear\"], [\"zoom\"],\n        // when zoom is 0, set each feature's circle radius to the value of its \"rating\" property\n        0, [\"get\", \"rating\"],\n        // when zoom is 10, set each feature's circle radius to four times the value of its \"rating\" property\n        10, [\"*\", 4, [\"get\", \"rating\"]]\n    ]\n}\n</code></pre> <p>An expression that uses both data and camera operators is considered both a data expression and a camera expression, and must adhere to the restrictions described above for both.</p>"},{"location":"expressions/#type-system","title":"Type system","text":"<p>The input arguments to expressions, and their result values, use the same set of types as the rest of the style specification: boolean, string, number, color, and arrays of these types. Furthermore, expressions are type safe: each use of an expression has a known result type and required argument types, and the SDKs verify that the result type of an expression is appropriate for the context in which it is used. For example, the result type of an expression in the <code>filter</code> property must be boolean, and the arguments to the <code>\"+\"</code> operator must be numbers.</p> <p>When working with feature data, the type of a feature property value is typically not known ahead of time by the SDK. To preserve type safety, when evaluating a data expression, the SDK will check that the property value is appropriate for the context. For example, if you use the expression <code>[\"get\", \"feature-color\"]</code> for the <code>circle-color</code> property, the SDK will verify that the <code>feature-color</code> value of each feature is a string identifying a valid color. If this check fails, an error will be indicated in an SDK-specific way (typically a log message), and the default value for the property will be used instead.</p> <p>In most cases, this verification will occur automatically wherever it is needed. However, in certain situations, the SDK may be unable to automatically determine the expected result type of a data expression from surrounding context. For example, it is not clear whether the expression <code>[\"&lt;\", [\"get\", \"a\"], [\"get\", \"b\"]]</code> is attempting to compare strings or numbers. In situations like this, you can use one of the type assertion expression operators to indicate the expected type of a data expression: <code>[\"&lt;\", [\"number\", [\"get\", \"a\"]], [\"number\", [\"get\", \"b\"]]]</code>. A type assertion checks that the feature data matches the expected type of the data expression. If this check fails, it produces an error and causes the whole expression to fall back to the default value for the property being defined. The assertion operators are <code>array</code>, <code>boolean</code>, <code>number</code>, and <code>string</code>.</p> <p>Expressions perform only one kind of implicit type conversion: a data expression used in a context where a color is expected will convert a string representation of a color to a color value. In all other cases, if you want to convert between types, you must use one of the type conversion expression operators: <code>to-boolean</code>, <code>to-number</code>, <code>to-string</code>, or <code>to-color</code>. For example, if you have a feature property that stores numeric values in string format, and you want to use those values as numbers rather than strings, you can use an expression such as <code>[\"to-number\", [\"get\", \"property-name\"]]</code>.</p> <p>If an expression accepts an array argument and the user supplies an array literal, that array must be wrapped in a <code>literal</code> expression (see the examples below). When GL-JS encounters an array in a style-spec property value, it will assume that the array is an expression and try to parse it; the library has no way to distinguish between an expression which failed validation and an array literal unless the developer makes this distinction explicit with the <code>literal</code> operator. The <code>literal</code> operator is not necessary if the array is returned from a sub-expression, e.g. <code>[\"in\", 1, [\"get\", \"myArrayProp\"]]</code>.</p> <pre><code>// will throw an error\n{\n    \"circle-color\": [\"in\", 1, [1, 2, 3]]\n}\n\n// will work as expected\n{\n    \"circle-color\": [\"in\", 1, [\"literal\", [1, 2, 3]]]\n}\n</code></pre>"},{"location":"expressions/#variable-binding","title":"Variable binding","text":""},{"location":"expressions/#let","title":"let","text":"<p>Binds expressions to named variables, which can then be referenced in the result expression using <code>[\"var\", \"variable_name\"]</code>.</p> <ul> <li>Visualize population density</li> </ul> <p>Syntax: <pre><code>[\"let\", var_1_name, var_1_value, ..., var_n_name, var_n_value, expression]: any\n</code></pre></p> <ul> <li><code>var_i_name</code>: string literal \u2014 The name of the i-th variable.</li> <li><code>var_i_value</code>: any \u2014 The value of the i-th variable.</li> <li><code>expression</code>: any \u2014 The expression within which the named variables can be referenced.</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"let\",\n    \"someNumber\",\n    500,\n    [\n        \"interpolate\",\n        [\"linear\"],\n        [\"var\", \"someNumber\"],\n        274,\n        \"#edf8e9\",\n        1551,\n        \"#006d2c\"\n    ]\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#var","title":"var","text":"<p>References variable bound using <code>let</code>.</p> <ul> <li>Visualize population density</li> </ul> <p>Syntax: <pre><code>[\"var\", var_name]: any\n</code></pre></p> <ul> <li><code>var_name</code>: string literal \u2014 The name of the variable bound using <code>let</code>.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"var\", \"density\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#types","title":"Types","text":""},{"location":"expressions/#literal","title":"literal","text":"<p>Provides a literal array or object value.</p> <ul> <li>Display and style rich text labels</li> </ul> <p>Syntax: <pre><code>[\"literal\", json_object]: object\n[\"literal\", json_array]: array\n</code></pre></p> <ul> <li><code>json_object</code>: JSON object</li> <li><code>json_array</code>: JSON array</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"literal\",\n    [\"DIN Offc Pro Italic\", \"Arial Unicode MS Regular\"]\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#array","title":"array","text":"<p>Asserts that the input is an array (optionally with a specific item type and length). If, when the input expression is evaluated, it is not of the asserted type or length, then this assertion will cause the whole expression to be aborted.</p> <p>Syntax: <pre><code>[\"array\", value]: array\n[\"array\", type, value]: array&lt;type&gt;\n[\"array\", type, length, value]: array&lt;type, length&gt;\n</code></pre></p> <ul> <li><code>value</code>: any</li> <li><code>type</code>: \"string\" | \"number\" | \"boolean\" \u2014 The asserted type of the input array.</li> <li><code>length</code>: number literal \u2014 The asserted length of the input array.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"array\", \"string\", 3, [\"literal\", [\"a\", \"b\", \"c\"]]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#typeof","title":"typeof","text":"<p>Returns a string describing the type of the given value.</p> <p>Syntax: <pre><code>[\"typeof\", value]: string\n</code></pre></p> <ul> <li><code>value</code>: any</li> </ul> <p>Example: <pre><code>\"some-property\": [\"typeof\", [\"get\", \"name\"]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#string","title":"string","text":"<p>Asserts that the input value is a string. If multiple values are provided, each one is evaluated in order until a string is obtained. If none of the inputs are strings, the expression is an error.</p> <p>Syntax: <pre><code>[\"string\", value_1, ..., value_n]: string\n</code></pre></p> <ul> <li><code>value_i</code>: any</li> </ul> <p>Example: <pre><code>\"some-property\": [\"string\", [\"get\", \"name\"]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#number","title":"number","text":"<p>Asserts that the input value is a number. If multiple values are provided, each one is evaluated in order until a number is obtained. If none of the inputs are numbers, the expression is an error.</p> <p>Syntax: <pre><code>[\"number\", value_1, ..., value_n]: number\n</code></pre></p> <ul> <li><code>value_i</code>: any</li> </ul> <p>Example: <pre><code>\"some-property\": [\"number\", [\"get\", \"population\"]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#boolean","title":"boolean","text":"<p>Asserts that the input value is a boolean. If multiple values are provided, each one is evaluated in order until a boolean is obtained. If none of the inputs are booleans, the expression is an error.</p> <ul> <li>Create a hover effect</li> </ul> <p>Syntax: <pre><code>[\"boolean\", value_1, ..., value_n]: boolean\n</code></pre></p> <ul> <li><code>value_i</code>: any</li> </ul> <p>Example: <pre><code>\"some-property\": [\"boolean\", [\"feature-state\", \"hover\"], false]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#object","title":"object","text":"<p>Asserts that the input value is an object. If multiple values are provided, each one is evaluated in order until an object is obtained. If none of the inputs are objects, the expression is an error.</p> <p>Syntax: <pre><code>[\"object\", value_1, ..., value_n]: object\n</code></pre></p> <ul> <li><code>value_i</code>: any</li> </ul> <p>Example: <pre><code>\"some-property\": [\"object\", [\"get\", \"some-property\"]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#collator","title":"collator","text":"<p>Returns a <code>collator</code> for use in locale-dependent comparison operations. The <code>case-sensitive</code> and <code>diacritic-sensitive</code> options default to <code>false</code>. The <code>locale</code> argument specifies the IETF language tag of the locale to use. If none is provided, the default locale is used. If the requested locale is not available, the <code>collator</code> will use a system-defined fallback locale. Use <code>resolved-locale</code> to test the results of locale fallback behavior.</p> <p>Syntax: <pre><code>[\"collator\", options]: collator\n</code></pre></p> <ul> <li><code>options</code>: { \"case-sensitive\"?: boolean, \"diacritic-sensitive\"?: boolean, \"locale\"?: string }</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"collator\",\n    {\n        \"case-sensitive\": true,\n        \"diacritic-sensitive\": true,\n        \"locale\": \"fr\"\n    }\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.45.0 6.5.0 4.2.0"},{"location":"expressions/#format","title":"format","text":"<p>Returns a <code>formatted</code> string for displaying mixed-format text in the <code>text-field</code> property. The input may contain a string literal or expression, including an <code>'image'</code> expression. Strings may be followed by a style override object that supports the following properties:</p> <ul> <li> <p><code>\"text-font\"</code>: Overrides the font stack specified by the root layout property.</p> </li> <li> <p><code>\"text-color\"</code>: Overrides the color specified by the root paint property.</p> </li> <li> <p><code>\"font-scale\"</code>: Applies a scaling factor on <code>text-size</code> as specified by the root layout property.</p> </li> <li> <p><code>\"vertical-align\"</code>: Aligns vertically text section or image in relation to the row it belongs to. Possible values are: </p> <ul> <li><code>\"bottom\"</code> default: align the bottom of this section with the bottom of other sections. </li> <li><code>\"center\"</code>: align the center of this section with the center of other sections. </li> <li><code>\"top\"</code>: align the top of this section with the top of other sections. </li> <li>Refer to the design proposal for more details.</li> </ul> </li> <li> <p>Change the case of labels</p> </li> <li> <p>Display and style rich text labels</p> </li> </ul> <p>Syntax: <pre><code>[\"format\", input_1, style_overrides_1?, ..., input_n, style_overrides_n?]: formatted\n</code></pre></p> <ul> <li><code>input_i</code>: string | image</li> <li><code>style_overrides_i</code>: { \"text-font\"?: string, \"text-color\"?: color, \"font-scale\"?: number, \"vertical-align\"?: \"bottom\" | \"center\" | \"top\" }</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"format\",\n    [\"upcase\", [\"get\", \"FacilityName\"]],\n    {\"font-scale\": 0.8},\n    \"\\n\\n\",\n    {},\n    [\"downcase\", [\"get\", \"Comments\"]],\n    {\"font-scale\": 0.6, \"vertical-align\": \"center\"}\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.48.0 6.7.0 4.6.0 text-font 0.48.0 6.7.0 4.6.0 font-scale 0.48.0 6.7.0 4.6.0 text-color 1.3.0 7.3.0 4.10.0 vertical-align 5.1.0 \u274c (#3055) \u274c (#3055) image 1.6.0 8.6.0 5.7.0"},{"location":"expressions/#image","title":"image","text":"<p>Returns an <code>image</code> type for use in <code>icon-image</code>, <code>*-pattern</code> entries and as a section in the <code>format</code> expression. If set, the <code>image</code> argument will check that the requested image exists in the style and will return either the resolved image name or <code>null</code>, depending on whether or not the image is currently in the style. This validation process is synchronous and requires the image to have been added to the style before requesting it in the <code>image</code> argument.</p> <ul> <li>Use a fallback image</li> </ul> <p>Syntax: <pre><code>[\"image\", image_name]: image\n</code></pre></p> <ul> <li><code>image_name</code>: string</li> </ul> <p>Example: <pre><code>\"some-property\": [\"image\", \"marker_15\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 1.4.0 8.6.0 5.7.0"},{"location":"expressions/#number-format","title":"number-format","text":"<p>Converts the input number into a string representation using the providing formatting rules. If set, the <code>locale</code> argument specifies the locale to use, as a BCP 47 language tag. If set, the <code>currency</code> argument specifies an ISO 4217 code to use for currency-style formatting. If set, the <code>min-fraction-digits</code> and <code>max-fraction-digits</code> arguments specify the minimum and maximum number of fractional digits to include.</p> <ul> <li>Display HTML clusters with custom properties</li> </ul> <p>Syntax: <pre><code>[\"number-format\", input, format_options]: string\n</code></pre></p> <ul> <li><code>input</code>: number</li> <li><code>format_options</code>: { \"locale\"?: string, \"currency\"?: string, \"min-fraction-digits\"?: number, \"max-fraction-digits\"?: number }</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"number-format\",\n    [\"get\", \"mag\"],\n    {\"min-fraction-digits\": 1, \"max-fraction-digits\": 1}\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.54.0 8.4.0 \u2705"},{"location":"expressions/#to-string","title":"to-string","text":"<p>Converts the input value to a string. If the input is <code>null</code>, the result is <code>\"\"</code>. If the input is a boolean, the result is <code>\"true\"</code> or <code>\"false\"</code>. If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript Language Specification. If the input is a color, it is converted to a string of the form <code>\"rgba(r,g,b,a)\"</code>, where <code>r</code>, <code>g</code>, and <code>b</code> are numerals ranging from 0 to 255, and <code>a</code> ranges from 0 to 1. Otherwise, the input is converted to a string in the format specified by the <code>JSON.stringify</code> function of the ECMAScript Language Specification.</p> <ul> <li>Create a time slider</li> </ul> <p>Syntax: <pre><code>[\"to-string\", value]: string\n</code></pre></p> <ul> <li><code>value</code>: any</li> </ul> <p>Example: <pre><code>\"some-property\": [\"to-string\", [\"get\", \"mag\"]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#to-number","title":"to-number","text":"<p>Converts the input value to a number, if possible. If the input is <code>null</code> or <code>false</code>, the result is 0. If the input is <code>true</code>, the result is 1. If the input is a string, it is converted to a number as specified by the \"ToNumber Applied to the String Type\" algorithm of the ECMAScript Language Specification. If multiple values are provided, each one is evaluated in order until the first successful conversion is obtained. If none of the inputs can be converted, the expression is an error.</p> <p>Syntax: <pre><code>[\"to-number\", value_1, ..., value_n]: number\n</code></pre></p> <ul> <li><code>value_i</code>: any</li> </ul> <p>Example: <pre><code>\"some-property\": [\"to-number\", \"someProperty\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#to-boolean","title":"to-boolean","text":"<p>Converts the input value to a boolean. The result is <code>false</code> when the input is an empty string, 0, <code>false</code>, <code>null</code>, or <code>NaN</code>; otherwise it is <code>true</code>.</p> <p>Syntax: <pre><code>[\"to-boolean\", value]: boolean\n</code></pre></p> <ul> <li><code>value</code>: any</li> </ul> <p>Example: <pre><code>\"some-property\": [\"to-boolean\", \"someProperty\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#to-color","title":"to-color","text":"<p>Converts the input value to a color. If multiple values are provided, each one is evaluated in order until the first successful conversion is obtained. If none of the inputs can be converted, the expression is an error.</p> <ul> <li>Visualize population density</li> </ul> <p>Syntax: <pre><code>[\"to-color\", value_1, ..., value_n]: color\n</code></pre></p> <ul> <li><code>value_i</code>: any</li> </ul> <p>Example: <pre><code>\"some-property\": [\"to-color\", \"#edf8e9\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#lookup","title":"Lookup","text":""},{"location":"expressions/#at","title":"at","text":"<p>Retrieves an item from an array.</p> <p>Syntax: <pre><code>[\"at\", index, array]: T\n</code></pre></p> <ul> <li><code>index</code>: number \u2014 The index into <code>array</code>.</li> <li><code>array</code>: array&lt;T&gt; \u2014 The array of items to retrieve the specified item from.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"at\", 1, [\"literal\", [\"a\", \"b\", \"c\"]]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#in","title":"in","text":"<p>Determines whether an item exists in an array or a substring exists in a string.</p> <ul> <li>Measure distances</li> </ul> <p>Syntax: <pre><code>[\"in\", item, array]: boolean\n[\"in\", substring, string]: boolean\n</code></pre></p> <ul> <li><code>item</code>: T \u2014 The needle to search for within <code>array</code>.</li> <li><code>array</code>: array&lt;T&gt; \u2014 The haystack through which to search for <code>item</code>.</li> <li><code>substring</code>: string \u2014 The needle to search for within <code>string</code>.</li> <li><code>string</code>: string \u2014 The haystack through which to search for <code>substring</code>.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"in\", \"$type\", \"Point\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 1.6.0 9.1.0 5.8.0"},{"location":"expressions/#index-of","title":"index-of","text":"<p>Returns the first position at which an item can be found in an array or a substring can be found in a string, or <code>-1</code> if the input cannot be found. Accepts an optional index from where to begin the search. In a string, a UTF-16 surrogate pair counts as a single position.</p> <p>Syntax: <pre><code>[\"index-of\", item, array, from_index?]: number\n[\"index-of\", substring, string, from_index?]: number\n</code></pre></p> <ul> <li><code>item</code>: T \u2014 The needle to search for within <code>array</code>.</li> <li><code>array</code>: array&lt;T&gt; \u2014 The haystack through which to search for <code>item</code>.</li> <li><code>substring</code>: string \u2014 The needle to search for within <code>string</code>.</li> <li><code>string</code>: string \u2014 The haystack through which to search for <code>substring</code>.</li> <li><code>from_index</code>: number \u2014 The index from where to begin the search.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"index-of\", \"foo\", [\"baz\", \"bar\", \"hello\", \"foo\", \"world\"]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 1.10.0 10.3.0 6.0.0"},{"location":"expressions/#slice","title":"slice","text":"<p>Returns a subarray from an array or a substring from a string from a specified start index, or between a start index and an end index if set. The return value is inclusive of the start index but not of the end index. In a string, a UTF-16 surrogate pair counts as a single position.</p> <p>Syntax: <pre><code>[\"slice\", array, start_index, end_index?]: array&lt;T&gt;\n[\"slice\", string, start_index, end_index?]: string\n</code></pre></p> <ul> <li><code>array</code>: array&lt;T&gt; \u2014 The original array from which to extract the subarray.</li> <li><code>string</code>: string \u2014 The original string from which to extract the substring.</li> <li><code>start_index</code>: number \u2014 The inclusive index from which <code>slice</code> extracts items or characters from the subarray or substring.</li> <li><code>end_index</code>: number \u2014 The non-inclusive index up to which <code>slice</code> extracts items or characters from the subarray or substring.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"slice\", [\"get\", \"name\"], 0, 3]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 1.10.0 10.3.0 6.0.0"},{"location":"expressions/#global-state","title":"global-state","text":"<p>Retrieves a property value from global state that can be set with platform-specific APIs. Defaults can be provided using the <code>state</code> root property. Returns <code>null</code> if no value nor default value is set for the retrieved property.</p> <p>Syntax: <pre><code>[\"global-state\", property_name]: any\n</code></pre></p> <ul> <li><code>property_name</code>: string literal \u2014 The name of the global state property to retrieve.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"global-state\", \"someProperty\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality \u274c (#4964) \u274c (#3302) \u274c (#3302)"},{"location":"expressions/#get","title":"get","text":"<p>Retrieves a property value from the current feature's properties, or from another object if a second argument is provided. Returns null if the requested property is missing.</p> <ul> <li> <p>Change the case of labels</p> </li> <li> <p>Display HTML clusters with custom properties</p> </li> <li> <p>Extrude polygons for 3D indoor mapping</p> </li> </ul> <p>Syntax: <pre><code>[\"get\", property_name, object?]: any\n</code></pre></p> <ul> <li><code>property_name</code>: string \u2014 The name of the property to retrieve the value of.</li> <li><code>object</code>: object \u2014 The object to retrieve the value from.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"get\", \"someProperty\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#has","title":"has","text":"<p>Tests for the presence of a property value in the current feature's properties, or from another object if a second argument is provided.</p> <ul> <li>Create and style clusters</li> </ul> <p>Syntax: <pre><code>[\"has\", property_name, object?]: boolean\n</code></pre></p> <ul> <li><code>property_name</code>: string \u2014 The name of the property to test for the presence of.</li> <li><code>object</code>: object \u2014 The object in which to test for the presence of the <code>property_name</code> property.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"has\", \"someProperty\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#length","title":"length","text":"<p>Gets the length of an array or string. In a string, a UTF-16 surrogate pair counts as a single position.</p> <p>Syntax: <pre><code>[\"length\", array_or_string]: number\n</code></pre></p> <ul> <li><code>array_or_string</code>: array | string</li> </ul> <p>Example: <pre><code>\"some-property\": [\"length\", [\"get\", \"myArray\"]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#decision","title":"Decision","text":""},{"location":"expressions/#case","title":"case","text":"<p>Selects the first output whose corresponding test condition evaluates to true, or the fallback value otherwise.</p> <ul> <li> <p>Create a hover effect</p> </li> <li> <p>Display HTML clusters with custom properties</p> </li> </ul> <p>Syntax: <pre><code>[\"case\", condition_1, output_1, ..., condition_n, output_n, fallback]: any\n</code></pre></p> <ul> <li><code>condition_i</code>: boolean</li> <li><code>output_i</code>: any</li> <li><code>fallback</code>: any \u2014 The result when no condition evaluates to true.</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"case\",\n    [\"boolean\", [\"feature-state\", \"hover\"], false],\n    1,\n    0.5\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#match","title":"match","text":"<p>Selects the output whose label value matches the input value, or the fallback value if no match is found. The input can be any expression (e.g. <code>[\"get\", \"building_type\"]</code>). Each label must be either:</p> <ul> <li> <p>a single literal value; or</p> </li> <li> <p>an array of literal values, whose values must be all strings or all numbers (e.g. <code>[100, 101]</code> or <code>[\"c\", \"b\"]</code>). The input matches if any of the values in the array matches, similar to the <code>\"in\"</code> operator.</p> </li> </ul> <p>Each label must be unique. If the input type does not match the type of the labels, the result will be the fallback value.</p> <p>Syntax: <pre><code>[\"match\", input, label_1, output_1, ..., label_n, output_n, fallback]: any\n</code></pre></p> <ul> <li><code>input</code>: string | number \u2014 Any expression.</li> <li><code>label_i</code>: string literal | number literal | array&lt;string literal&gt; | array&lt;number literal&gt; \u2014 The i-th literal value or array of literal values to match the input against.</li> <li><code>output_i</code>: any \u2014 The result when the i-th label is the first label to match the input.</li> <li><code>fallback</code>: any \u2014 The result when no label matches the input.</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"match\",\n    [\"get\", \"building_type\"],\n    \"residential\",\n    \"#f00\",\n    \"commercial\",\n    \"#0f0\",\n    \"#000\"\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#coalesce","title":"coalesce","text":"<p>Evaluates each expression in turn until the first non-null value is obtained, and returns that value.</p> <ul> <li>Use a fallback image</li> </ul> <p>Syntax: <pre><code>[\"coalesce\", expression_1, ..., expression_n]: any\n</code></pre></p> <ul> <li><code>expression_i</code>: any</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"coalesce\",\n    [\"image\", [\"concat\", [\"get\", \"icon\"], \"_15\"]],\n    [\"image\", \"marker_15\"]\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#_1","title":"==","text":"<p>Returns <code>true</code> if the input values are equal, <code>false</code> otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional <code>collator</code> argument to control locale-dependent string comparisons.</p> <ul> <li> <p>Add multiple geometries from one GeoJSON source</p> </li> <li> <p>Create a time slider</p> </li> <li> <p>Display buildings in 3D</p> </li> <li> <p>Filter symbols by toggling a list</p> </li> </ul> <p>Syntax: <pre><code>[\"==\", input_1, input_2, collator?]: boolean\n</code></pre></p> <ul> <li><code>input_1</code>: any</li> <li><code>input_2</code>: any</li> <li><code>collator</code>: collator \u2014 Options for locale-dependent comparison.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"==\", \"$type\", \"Polygon\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0 collator 0.45.0 6.5.0 4.2.0"},{"location":"expressions/#_2","title":"!=","text":"<p>Returns <code>true</code> if the input values are not equal, <code>false</code> otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional <code>collator</code> argument to control locale-dependent string comparisons.</p> <ul> <li>Display HTML clusters with custom properties</li> </ul> <p>Syntax: <pre><code>[\"!=\", input_1, input_2, collator?]: boolean\n</code></pre></p> <ul> <li><code>input_1</code>: any</li> <li><code>input_2</code>: any</li> <li><code>collator</code>: collator \u2014 Options for locale-dependent comparison.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"!=\", \"cluster\", true]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0 collator 0.45.0 6.5.0 4.2.0"},{"location":"expressions/#_3","title":"&gt;","text":"<p>Returns <code>true</code> if the first input is strictly greater than the second, <code>false</code> otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional <code>collator</code> argument to control locale-dependent string comparisons.</p> <p>Syntax: <pre><code>[\"&gt;\", string_1, string_2, collator?]: boolean\n[\"&gt;\", number_1, number_2, collator?]: boolean\n</code></pre></p> <ul> <li><code>string_i</code>: string</li> <li><code>number_i</code>: number</li> <li><code>collator</code>: collator \u2014 Options for locale-dependent comparison.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"&gt;\", [\"get\", \"mag\"], 2]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0 collator 0.45.0 6.5.0 4.2.0"},{"location":"expressions/#_4","title":"&lt;","text":"<p>Returns <code>true</code> if the first input is strictly less than the second, <code>false</code> otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional <code>collator</code> argument to control locale-dependent string comparisons.</p> <ul> <li>Display HTML clusters with custom properties</li> </ul> <p>Syntax: <pre><code>[\"&lt;\", string_1, string_2, collator?]: boolean\n[\"&lt;\", number_1, number_2, collator?]: boolean\n</code></pre></p> <ul> <li><code>string_i</code>: string</li> <li><code>number_i</code>: number</li> <li><code>collator</code>: collator \u2014 Options for locale-dependent comparison.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"&lt;\", [\"get\", \"mag\"], 2]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0 collator 0.45.0 6.5.0 4.2.0"},{"location":"expressions/#_5","title":"&gt;=","text":"<p>Returns <code>true</code> if the first input is greater than or equal to the second, <code>false</code> otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional <code>collator</code> argument to control locale-dependent string comparisons.</p> <ul> <li>Display HTML clusters with custom properties</li> </ul> <p>Syntax: <pre><code>[\"&gt;=\", string_1, string_2, collator?]: boolean\n[\"&gt;=\", number_1, number_2, collator?]: boolean\n</code></pre></p> <ul> <li><code>string_i</code>: string</li> <li><code>number_i</code>: number</li> <li><code>collator</code>: collator \u2014 Options for locale-dependent comparison.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"&gt;=\", [\"get\", \"mag\"], 6]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0 collator 0.45.0 6.5.0 4.2.0"},{"location":"expressions/#_6","title":"&lt;=","text":"<p>Returns <code>true</code> if the first input is less than or equal to the second, <code>false</code> otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional <code>collator</code> argument to control locale-dependent string comparisons.</p> <p>Syntax: <pre><code>[\"&lt;=\", string_1, string_2, collator?]: boolean\n[\"&lt;=\", number_1, number_2, collator?]: boolean\n</code></pre></p> <ul> <li><code>string_i</code>: string</li> <li><code>number_i</code>: number</li> <li><code>collator</code>: collator \u2014 Options for locale-dependent comparison.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"&lt;=\", [\"get\", \"mag\"], 6]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0 collator 0.45.0 6.5.0 4.2.0"},{"location":"expressions/#all","title":"all","text":"<p>Returns <code>true</code> if all the inputs are <code>true</code>, <code>false</code> otherwise. The inputs are evaluated in order, and evaluation is short-circuiting: once an input expression evaluates to <code>false</code>, the result is <code>false</code> and no further input expressions are evaluated.</p> <ul> <li>Display HTML clusters with custom properties</li> </ul> <p>Syntax: <pre><code>[\"all\", input_1, ..., input_n]: boolean\n</code></pre></p> <ul> <li><code>input_i</code>: boolean</li> </ul> <p>Example: <pre><code>\"some-property\": [\"all\", [\"&gt;=\", [\"get\", \"mag\"], 4], [\"&lt;\", [\"get\", \"mag\"], 5]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#any","title":"any","text":"<p>Returns <code>true</code> if any of the inputs are <code>true</code>, <code>false</code> otherwise. The inputs are evaluated in order, and evaluation is short-circuiting: once an input expression evaluates to <code>true</code>, the result is <code>true</code> and no further input expressions are evaluated.</p> <p>Syntax: <pre><code>[\"any\", input_1, ..., input_n]: boolean\n</code></pre></p> <ul> <li><code>input_i</code>: boolean</li> </ul> <p>Example: <pre><code>\"some-property\": [\"any\", [\"&gt;=\", [\"get\", \"mag\"], 4], [\"&lt;\", [\"get\", \"mag\"], 5]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#_7","title":"!","text":"<p>Logical negation. Returns <code>true</code> if the input is <code>false</code>, and <code>false</code> if the input is <code>true</code>.</p> <ul> <li>Create and style clusters</li> </ul> <p>Syntax: <pre><code>[\"!\", input]: boolean\n</code></pre></p> <ul> <li><code>input</code>: boolean</li> </ul> <p>Example: <pre><code>\"some-property\": [\"!\", [\"has\", \"point_count\"]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#within","title":"within","text":"<p>Returns <code>true</code> if the evaluated feature is fully contained inside a boundary of the input geometry, <code>false</code> otherwise. The input value can be a valid GeoJSON of type <code>Polygon</code>, <code>MultiPolygon</code>, <code>Feature</code>, or <code>FeatureCollection</code>. Supported features for evaluation:</p> <ul> <li> <p><code>Point</code>: Returns <code>false</code> if a point is on the boundary or falls outside the boundary.</p> </li> <li> <p><code>LineString</code>: Returns <code>false</code> if any part of a line falls outside the boundary, the line intersects the boundary, or a line's endpoint is on the boundary.</p> </li> </ul> <p>Syntax: <pre><code>[\"within\", geojson]: boolean\n</code></pre></p> <ul> <li><code>geojson</code>: GeoJSON object</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"within\",\n    {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n            [[0, 0], [0, 5], [5, 5], [5, 0], [0, 0]]\n        ]\n    }\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 1.9.0 9.1.0 5.8.0"},{"location":"expressions/#ramps-scales-curves","title":"Ramps, scales, curves","text":""},{"location":"expressions/#step","title":"step","text":"<p>Produces discrete, stepped results by evaluating a piecewise-constant function defined by pairs of input and output values (\"stops\"). The <code>input</code> may be any numeric expression (e.g., <code>[\"get\", \"population\"]</code>). Stop inputs must be numeric literals in strictly ascending order.</p> <p>Returns the output value of the stop just less than the input, or the first output if the input is less than the first stop.</p> <ul> <li>Create and style clusters</li> </ul> <p>Syntax: <pre><code>[\"step\", input, output_0, stop_1_input, stop_1_output, ..., stop_n_input, stop_n_output]: any\n</code></pre></p> <ul> <li><code>input</code>: number \u2014 Any numeric expression.</li> <li><code>output_0</code>: any \u2014 The result when the <code>input</code> is less than the first stop.</li> <li><code>stop_i_input</code>: number literal \u2014 The value of the i-th stop against which the <code>input</code> is compared.</li> <li><code>stop_i_output</code>: any \u2014 The result when the i-th stop is the last stop less than the <code>input</code>.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"step\", [\"get\", \"point_count\"], 20, 100, 30, 750, 40]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.42.0 6.0.0 4.0.0"},{"location":"expressions/#interpolate","title":"interpolate","text":"<p>Produces continuous, smooth results by interpolating between pairs of input and output values (\"stops\"). The <code>input</code> may be any numeric expression (e.g., <code>[\"get\", \"population\"]</code>). Stop inputs must be numeric literals in strictly ascending order. The output type must be <code>number</code>, <code>array&lt;number&gt;</code>, <code>color</code>, <code>array&lt;color&gt;</code>, or <code>projection</code>.</p> <p>Interpolation types:</p> <ul> <li> <p><code>[\"linear\"]</code>, or an expression returning one of those types: Interpolates linearly between the pair of stops just less than and just greater than the input.</p> </li> <li> <p><code>[\"exponential\", base]</code>: Interpolates exponentially between the stops just less than and just greater than the input. <code>base</code> controls the rate at which the output increases: higher values make the output increase more towards the high end of the range. With values close to 1 the output increases linearly.</p> </li> <li> <p><code>[\"cubic-bezier\", x1, y1, x2, y2]</code>: Interpolates using the cubic bezier curve defined by the given control points.</p> </li> <li> <p>Animate map camera around a point</p> </li> <li> <p>Change building color based on zoom level</p> </li> <li> <p>Create a heatmap layer</p> </li> <li> <p>Visualize population density</p> </li> </ul> <p>Syntax: <pre><code>[\"interpolate\", interpolation_type, input, stop_1_input, stop_1_output, ..., stop_n_input, stop_n_output]: number | array&lt;number&gt; | color | array&lt;color&gt; | projection\n</code></pre></p> <ul> <li><code>interpolation_type</code>: [\"linear\"] | [\"exponential\", base] | [\"cubic-bezier\", x1, y1, x2, y2] \u2014 The interpolation type.</li> <li><code>input</code>: number \u2014 Any numeric expression.</li> <li><code>stop_i_input</code>: number literal \u2014 The value of the i-th stop against which the <code>input</code> is compared.</li> <li><code>stop_i_output</code>: number | array&lt;number&gt; | color | array&lt;color&gt; | projection \u2014 The output value corresponding to the i-th stop.</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"interpolate\",\n    [\"linear\"],\n    [\"zoom\"],\n    15,\n    0,\n    15.05,\n    [\"get\", \"height\"]\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.42.0 6.0.0 4.0.0"},{"location":"expressions/#interpolate-hcl","title":"interpolate-hcl","text":"<p>Produces continuous, smooth results by interpolating between pairs of input and output values (\"stops\"). Works like <code>interpolate</code>, but the output type must be <code>color</code> or <code>array&lt;color&gt;</code>, and the interpolation is performed in the Hue-Chroma-Luminance color space.</p> <p>Syntax: <pre><code>[\"interpolate-hcl\", interpolation_type, input, stop_1_input, stop_1_output, ..., stop_n_input, stop_n_output]: color | array&lt;color&gt;\n</code></pre></p> <ul> <li><code>interpolation_type</code>: [\"linear\"] | [\"exponential\", base] | [\"cubic-bezier\", x1, y1, x2, y2]</li> <li><code>input</code>: number</li> <li><code>stop_i_input</code>: number literal</li> <li><code>stop_i_output</code>: color | array&lt;color&gt;</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"interpolate-hcl\",\n    [\"linear\"],\n    [\"zoom\"],\n    15,\n    \"#f00\",\n    15.05,\n    \"#00f\"\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.49.0 \u274c (#2784) \u274c (#2784)"},{"location":"expressions/#interpolate-lab","title":"interpolate-lab","text":"<p>Produces continuous, smooth results by interpolating between pairs of input and output values (\"stops\"). Works like <code>interpolate</code>, but the output type must be <code>color</code> or <code>array&lt;color&gt;</code>, and the interpolation is performed in the CIELAB color space.</p> <p>Syntax: <pre><code>[\"interpolate-lab\", interpolation_type, input, stop_1_input, stop_1_output, ..., stop_n_input, stop_n_output]: color | array&lt;color&gt;\n</code></pre></p> <ul> <li><code>interpolation_type</code>: [\"linear\"] | [\"exponential\", base] | [\"cubic-bezier\", x1, y1, x2, y2]</li> <li><code>input</code>: number</li> <li><code>stop_i_input</code>: number literal</li> <li><code>stop_i_output</code>: color | array&lt;color&gt;</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"interpolate-lab\",\n    [\"linear\"],\n    [\"zoom\"],\n    15,\n    \"#f00\",\n    15.05,\n    \"#00f\"\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.49.0 \u274c (#2784) \u274c (#2784)"},{"location":"expressions/#math","title":"Math","text":""},{"location":"expressions/#ln2","title":"ln2","text":"<p>Returns the mathematical constant ln(2).</p> <p>Syntax: <pre><code>[\"ln2\"]: number\n</code></pre></p> <p>Example: <pre><code>\"some-property\": [\"ln2\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#pi","title":"pi","text":"<p>Returns the mathematical constant pi.</p> <p>Syntax: <pre><code>[\"pi\"]: number\n</code></pre></p> <p>Example: <pre><code>\"some-property\": [\"pi\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#e","title":"e","text":"<p>Returns the mathematical constant e.</p> <p>Syntax: <pre><code>[\"e\"]: number\n</code></pre></p> <p>Example: <pre><code>\"some-property\": [\"e\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#_8","title":"+","text":"<p>Returns the sum of the inputs.</p> <p>Syntax: <pre><code>[\"+\", input_1, ..., input_n]: number\n</code></pre></p> <ul> <li><code>input_i</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"+\", 2, 3]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#_9","title":"*","text":"<p>Returns the product of the inputs.</p> <p>Syntax: <pre><code>[\"*\", input_1, ..., input_n]: number\n</code></pre></p> <ul> <li><code>input_i</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"*\", 2, 3]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#-","title":"-","text":"<p>For two inputs, returns the result of subtracting the second input from the first. For a single input, returns the result of subtracting it from 0.</p> <p>Syntax: <pre><code>[\"-\", input_1, input_2]: number\n[\"-\", single_input]: number\n</code></pre></p> <ul> <li><code>input_1</code>: number \u2014 The number from which to subtract <code>input_2</code>.</li> <li><code>input_2</code>: number \u2014 The number to subtract from <code>input_1</code>.</li> <li><code>single_input</code>: number \u2014 The number to subtract from 0.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"-\", 10]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#_10","title":"/","text":"<p>Returns the result of floating point division of the first input by the second.</p> <ul> <li>Visualize population density</li> </ul> <p>Syntax: <pre><code>[\"/\", input_1, input_2]: number\n</code></pre></p> <ul> <li><code>input_1</code>: number \u2014 The dividend.</li> <li><code>input_2</code>: number \u2014 The divisor.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"/\", [\"get\", \"population\"], [\"get\", \"sq-km\"]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#_11","title":"%","text":"<p>Returns the remainder after integer division of the first input by the second.</p> <p>Syntax: <pre><code>[\"%\", input_1, input_2]: number\n</code></pre></p> <ul> <li><code>input_1</code>: number \u2014 The dividend.</li> <li><code>input_2</code>: number \u2014 The divisor.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"%\", 10, 3]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#_12","title":"^","text":"<p>Returns the result of raising the first input to the power specified by the second.</p> <p>Syntax: <pre><code>[\"^\", input_1, input_2]: number\n</code></pre></p> <ul> <li><code>input_1</code>: number \u2014 The base.</li> <li><code>input_2</code>: number \u2014 The exponent.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"^\", 2, 3]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#sqrt","title":"sqrt","text":"<p>Returns the square root of the input.</p> <p>Syntax: <pre><code>[\"sqrt\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number \u2014 The radicand.</li> </ul> <p>Example: <pre><code>\"some-property\": [\"sqrt\", 9]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.42.0 6.0.0 4.0.0"},{"location":"expressions/#log10","title":"log10","text":"<p>Returns the base-ten logarithm of the input.</p> <p>Syntax: <pre><code>[\"log10\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"log10\", 8]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#ln","title":"ln","text":"<p>Returns the natural logarithm of the input.</p> <p>Syntax: <pre><code>[\"ln\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"ln\", 8]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#log2","title":"log2","text":"<p>Returns the base-two logarithm of the input.</p> <p>Syntax: <pre><code>[\"log2\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"log2\", 8]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#sin","title":"sin","text":"<p>Returns the sine of the input.</p> <p>Syntax: <pre><code>[\"sin\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"sin\", 1]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#cos","title":"cos","text":"<p>Returns the cosine of the input.</p> <p>Syntax: <pre><code>[\"cos\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"cos\", 1]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#tan","title":"tan","text":"<p>Returns the tangent of the input.</p> <p>Syntax: <pre><code>[\"tan\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"tan\", 1]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#asin","title":"asin","text":"<p>Returns the arcsine of the input.</p> <p>Syntax: <pre><code>[\"asin\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"asin\", 1]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#acos","title":"acos","text":"<p>Returns the arccosine of the input.</p> <p>Syntax: <pre><code>[\"acos\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"acos\", 1]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#atan","title":"atan","text":"<p>Returns the arctangent of the input.</p> <p>Syntax: <pre><code>[\"atan\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"atan\", 1]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#min","title":"min","text":"<p>Returns the minimum value of the inputs.</p> <p>Syntax: <pre><code>[\"min\", input_1, ..., input_n]: number\n</code></pre></p> <ul> <li><code>input_i</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"min\", 1, 2]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#max","title":"max","text":"<p>Returns the maximum value of the inputs.</p> <p>Syntax: <pre><code>[\"max\", input_1, ..., input_n]: number\n</code></pre></p> <ul> <li><code>input_i</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"max\", 1, 2]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#round","title":"round","text":"<p>Rounds the input to the nearest integer. Halfway values are rounded away from zero. For example, <code>[\"round\", -1.5]</code> evaluates to -2.</p> <p>Syntax: <pre><code>[\"round\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"round\", 1.5]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.45.0 6.0.0 4.0.0"},{"location":"expressions/#abs","title":"abs","text":"<p>Returns the absolute value of the input.</p> <p>Syntax: <pre><code>[\"abs\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"abs\", -1.5]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.45.0 6.0.0 4.0.0"},{"location":"expressions/#ceil","title":"ceil","text":"<p>Returns the smallest integer that is greater than or equal to the input.</p> <p>Syntax: <pre><code>[\"ceil\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"ceil\", 1.5]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.45.0 6.0.0 4.0.0"},{"location":"expressions/#floor","title":"floor","text":"<p>Returns the largest integer that is less than or equal to the input.</p> <p>Syntax: <pre><code>[\"floor\", input]: number\n</code></pre></p> <ul> <li><code>input</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"floor\", 1.5]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.45.0 6.0.0 4.0.0"},{"location":"expressions/#distance","title":"distance","text":"<p>Returns the shortest distance in meters between the evaluated feature and the input geometry. The input value can be a valid GeoJSON of type <code>Point</code>, <code>MultiPoint</code>, <code>LineString</code>, <code>MultiLineString</code>, <code>Polygon</code>, <code>MultiPolygon</code>, <code>Feature</code>, or <code>FeatureCollection</code>. Distance values returned may vary in precision due to loss in precision from encoding geometries, particularly below zoom level 13.</p> <p>Syntax: <pre><code>[\"distance\", geojson]: number\n</code></pre></p> <ul> <li><code>geojson</code>: GeoJSON object</li> </ul> <p>Example: <pre><code>\"some-property\": [\"distance\", {\"type\": \"Point\", \"coordinates\": [0, 0]}]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 4.2.0 9.2.0 5.9.0"},{"location":"expressions/#color","title":"Color","text":""},{"location":"expressions/#to-rgba","title":"to-rgba","text":"<p>Returns a four-element array containing the input color's red, green, blue, and alpha components, in that order.</p> <p>Syntax: <pre><code>[\"to-rgba\", color]: array\n</code></pre></p> <ul> <li><code>color</code>: color</li> </ul> <p>Example: <pre><code>\"some-property\": [\"to-rgba\", \"#ff0000\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#rgb","title":"rgb","text":"<p>Creates a color value from red, green, and blue components, which must range between 0 and 255, and an alpha component of 1. If any component is out of range, the expression is an error.</p> <p>Syntax: <pre><code>[\"rgb\", red, green, blue]: color\n</code></pre></p> <ul> <li><code>red</code>: number</li> <li><code>green</code>: number</li> <li><code>blue</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"rgb\", 255, 0, 0]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#rgba","title":"rgba","text":"<p>Creates a color value from red, green, blue components, which must range between 0 and 255, and an alpha component which must range between 0 and 1. If any component is out of range, the expression is an error.</p> <p>Syntax: <pre><code>[\"rgba\", red, green, blue, alpha]: color\n</code></pre></p> <ul> <li><code>red</code>: number</li> <li><code>green</code>: number</li> <li><code>blue</code>: number</li> <li><code>alpha</code>: number</li> </ul> <p>Example: <pre><code>\"some-property\": [\"rgba\", 255, 0, 0, 1]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#feature-data","title":"Feature data","text":""},{"location":"expressions/#properties","title":"properties","text":"<p>Gets the feature properties object.  Note that in some cases, it may be more efficient to use [\"get\", \"property_name\"] directly.</p> <p>Syntax: <pre><code>[\"properties\"]: object\n</code></pre></p> <p>Example: <pre><code>\"some-property\": [\"properties\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#feature-state","title":"feature-state","text":"<p>Retrieves a property value from the current feature's state. Returns null if the requested property is not present on the feature's state. A feature's state is not part of the GeoJSON or vector tile data, and must be set programmatically on each feature. When <code>source.promoteId</code> is not provided, features are identified by their <code>id</code> attribute, which must be an integer or a string that can be cast to an integer. When <code>source.promoteId</code> is provided, features are identified by their <code>promoteId</code> property, which may be a number, string, or any primitive data type. Note that [\"feature-state\"] can only be used with paint properties that support data-driven styling.</p> <ul> <li>Create a hover effect</li> </ul> <p>Syntax: <pre><code>[\"feature-state\", property_name]: any\n</code></pre></p> <ul> <li><code>property_name</code>: string</li> </ul> <p>Example: <pre><code>\"some-property\": [\"feature-state\", \"hover\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.46.0 \u274c (#1698) \u274c (#1698)"},{"location":"expressions/#geometry-type","title":"geometry-type","text":"<p>Returns the feature's simple geometry type: <code>Point</code>, <code>LineString</code>, or <code>Polygon</code>. <code>MultiPoint</code>, <code>MultiLineString</code>, and <code>MultiPolygon</code> are returned as <code>Point</code>, <code>LineString</code>, and <code>Polygon</code>, respectively.</p> <p>Syntax: <pre><code>[\"geometry-type\"]: string\n</code></pre></p> <p>Example: <pre><code>\"some-property\": [\"==\", [\"geometry-type\"], \"Polygon\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#id","title":"id","text":"<p>Gets the feature's id, if it has one.</p> <p>Syntax: <pre><code>[\"id\"]: any\n</code></pre></p> <p>Example: <pre><code>\"some-property\": [\"id\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#line-progress","title":"line-progress","text":"<p>Gets the progress along a gradient line. Can only be used in the <code>line-gradient</code> property.</p> <p>Syntax: <pre><code>[\"line-progress\"]: number\n</code></pre></p> <p>Example: <pre><code>\"some-property\": [\"line-progress\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.45.0 6.5.0 4.6.0"},{"location":"expressions/#accumulated","title":"accumulated","text":"<p>Gets the value of a cluster property accumulated so far. Can only be used in the <code>clusterProperties</code> option of a clustered GeoJSON source.</p> <p>Syntax: <pre><code>[\"accumulated\"]: any\n</code></pre></p> <p>Example: <pre><code>\"some-property\": [\"accumulated\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.53.0 \u2705 \u2705"},{"location":"expressions/#zoom","title":"Zoom","text":""},{"location":"expressions/#zoom_1","title":"zoom","text":"<p>Gets the current zoom level.  Note that in style layout and paint properties, [\"zoom\"] may only appear as the input to a top-level \"step\" or \"interpolate\" expression.</p> <p>Syntax: <pre><code>[\"zoom\"]: number\n</code></pre></p> <p>Example: <pre><code>\"some-property\": [\n    \"interpolate\",\n    [\"linear\"],\n    [\"zoom\"],\n    15,\n    0,\n    15.05,\n    [\"get\", \"height\"]\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#heatmap","title":"Heatmap","text":""},{"location":"expressions/#heatmap-density","title":"heatmap-density","text":"<p>Gets the kernel density estimation of a pixel in a heatmap layer, which is a relative measure of how many data points are crowded around a particular pixel. Can only be used in the <code>heatmap-color</code> property.</p> <p>Syntax: <pre><code>[\"heatmap-density\"]: number\n</code></pre></p> <p>Example: <pre><code>\"some-property\": [\"heatmap-density\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#color-relief","title":"Color Relief","text":""},{"location":"expressions/#elevation","title":"elevation","text":"<p>Gets the elevation of a pixel (in meters above the vertical datum reference of the <code>raster-dem</code> tiles) from a <code>raster-dem</code> source. Can only be used in the <code>color-relief-color</code> property of a <code>color-relief</code> layer.</p> <p>Syntax: <pre><code>[\"elevation\"]: number\n</code></pre></p> <p>Example: <pre><code>\"some-property\": [\"elevation\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 5.6.0 \u274c (#3408) \u274c (#3408)"},{"location":"expressions/#string_1","title":"String","text":""},{"location":"expressions/#is-supported-script","title":"is-supported-script","text":"<p>Returns <code>true</code> if the input string is expected to render legibly. Returns <code>false</code> if the input string contains sections that cannot be rendered without potential loss of meaning (e.g. Indic scripts that require complex text shaping, or right-to-left scripts if the <code>mapbox-gl-rtl-text</code> plugin is not in use in MapLibre GL JS).</p> <p>Syntax: <pre><code>[\"is-supported-script\", input]: boolean\n</code></pre></p> <ul> <li><code>input</code>: string</li> </ul> <p>Example: <pre><code>\"some-property\": [\"is-supported-script\", \"\u0926\u093f\u0932\u094d\u0932\u0940\"]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.45.0 6.6.0 \u2705"},{"location":"expressions/#upcase","title":"upcase","text":"<p>Returns the input string converted to uppercase. Follows the Unicode Default Case Conversion algorithm and the locale-insensitive case mappings in the Unicode Character Database.</p> <ul> <li>Change the case of labels</li> </ul> <p>Syntax: <pre><code>[\"upcase\", input]: string\n</code></pre></p> <ul> <li><code>input</code>: string</li> </ul> <p>Example: <pre><code>\"some-property\": [\"upcase\", [\"get\", \"name\"]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#downcase","title":"downcase","text":"<p>Returns the input string converted to lowercase. Follows the Unicode Default Case Conversion algorithm and the locale-insensitive case mappings in the Unicode Character Database.</p> <ul> <li>Change the case of labels</li> </ul> <p>Syntax: <pre><code>[\"downcase\", input]: string\n</code></pre></p> <ul> <li><code>input</code>: string</li> </ul> <p>Example: <pre><code>\"some-property\": [\"downcase\", [\"get\", \"name\"]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#concat","title":"concat","text":"<p>Returns a <code>string</code> consisting of the concatenation of the inputs. Each input is converted to a string as if by <code>to-string</code>.</p> <ul> <li> <p>Add a generated icon to the map</p> </li> <li> <p>Create a time slider</p> </li> <li> <p>Use a fallback image</p> </li> <li> <p>Variable label placement</p> </li> </ul> <p>Syntax: <pre><code>[\"concat\", input_1, ..., input_n]: string\n</code></pre></p> <ul> <li><code>input_i</code>: any</li> </ul> <p>Example: <pre><code>\"some-property\": [\"concat\", \"square-rgb-\", [\"get\", \"color\"]]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"expressions/#resolved-locale","title":"resolved-locale","text":"<p>Returns the IETF language tag of the locale being used by the provided <code>collator</code>. This can be used to determine the default system locale, or to determine if a requested locale was successfully loaded.</p> <p>Syntax: <pre><code>[\"resolved-locale\", collator]: string\n</code></pre></p> <ul> <li><code>collator</code>: collator</li> </ul> <p>Example: <pre><code>\"some-property\": [\n    \"resolved-locale\",\n    [\n        \"collator\",\n        {\n            \"case-sensitive\": true,\n            \"diacritic-sensitive\": false,\n            \"locale\": \"de\"\n        }\n    ]\n]\n</code></pre></p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.45.0 6.5.0 4.2.0"},{"location":"font-faces/","title":"Font-faces","text":"<p>The <code>font-faces</code> property can be used to specify what font files to use for rendering text. Font faces contain information needed to render complex texts such as Devanagari, Khmer among many others.Unicode rangeThe optional <code>unicode-range</code> property can be used to only use a particular font file for characters within the specified unicode range(s). Its value should be an array of strings, each indicating a start and end of a unicode range, similar to the CSS descriptor with the same name. This allows specifying multiple non-consecutive unicode ranges. When not specified, the default value is <code>U+0-10FFFF</code>, meaning the font file will be used for all unicode characters.</p> <p>Refer to the Unicode Character Code Charts to see ranges for scripts supported by Unicode. To see what unicode code-points are available in a font, use a tool like FontDrop.</p> Font Resolution <p>For every name in a symbol layer\u2019s <code>text-font</code> array, characters are matched if they are covered one of the by the font files in the corresponding entry of the <code>font-faces</code> map. Any still-unmatched characters then fall back to the <code>glyphs</code> URL if provided.</p> Supported Fonts <p>What type of fonts are supported is implementation-defined. Unsupported fonts are ignored.</p> <pre><code>\"font-faces\": {\n    \"Noto Sans Regular\": [\n        {\n            \"url\": \"https://cdn.jsdelivr.net/gh/notofonts/notofonts.github.io/fonts/NotoSansKhmer/hinted/ttf/NotoSansKhmer-Regular.ttf\",\n            \"unicode-range\": [\"U+1780-17FF\"]\n        },\n        {\n            \"url\": \"https://cdn.jsdelivr.net/gh/notofonts/notofonts.github.io/fonts/NotoSansDevanagari/hinted/ttf/NotoSansDevanagari-Regular.ttf\",\n            \"unicode-range\": [\"U+0900-097F\"]\n        },\n        {\n            \"url\": \"https://cdn.jsdelivr.net/gh/notofonts/notofonts.github.io/fonts/NotoSansMyanmar/hinted/ttf/NotoSansMyanmar-Regular.ttf\",\n            \"unicode-range\": [\"U+1000-109F\"]\n        },\n        {\n            \"url\": \"https://cdn.jsdelivr.net/gh/notofonts/notofonts.github.io/fonts/NotoSansEthiopic/hinted/ttf/NotoSansEthiopic-Regular.ttf\",\n            \"unicode-range\": [\"U+1200-137F\"]\n        }\n    ],\n    \"Unifont\": \"https://ftp.gnu.org/gnu/unifont/unifont-15.0.01/unifont-15.0.01.ttf\"\n}\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality \u274c (#50) 11.13.0 6.18.0"},{"location":"glyphs/","title":"Glyphs","text":"<p>A URL template for loading signed-distance-field glyph sets in PBF format.</p> <p>If this property is set, any text in the <code>text-field</code> layout property is displayed in the font stack named by the <code>text-font</code> layout property based on glyphs located at the URL specified by this property. Otherwise, font faces will be determined by the <code>text-font</code> property based on the local environment.</p> <p>The URL must include:</p> <ul> <li> <p><code>{fontstack}</code> - When requesting glyphs, this token is replaced with a comma separated list of fonts from a font stack specified in the <code>text-font</code> property of a symbol layer. </p> </li> <li> <p><code>{range}</code> - When requesting glyphs, this token is replaced with a range of 256 Unicode code points. For example, to load glyphs for the Unicode Basic Latin and Basic Latin-1 Supplement blocks, the range would be 0-255. The actual ranges that are loaded are determined at runtime based on what text needs to be displayed.</p> </li> </ul> <p>The URL must be absolute, containing the scheme, authority and path components.</p> <pre><code>\"glyphs\": \"https://demotiles.maplibre.org/font/{fontstack}/{range}.pbf\"\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.0.16 0.1.1 0.1.0 omit to use local fonts \u274c (#3302) \u274c (#165) \u274c (#165)"},{"location":"layers/","title":"Layers","text":"<p>A style's <code>layers</code> property lists all the layers available in that style. The type of layer is specified by the <code>type</code> property, and must be one of <code>background</code>, <code>fill</code>, <code>line</code>, <code>symbol</code>, <code>raster</code>, <code>circle</code>, <code>fill-extrusion</code>, <code>heatmap</code>, <code>hillshade</code>, <code>color-relief</code>.</p> <p>Except for layers of the <code>background</code> type, each layer needs to refer to a source. Layers take the data that they get from a source, optionally filter features, and then define how those features are styled.</p> <pre><code>\"layers\": [\n    {\n        \"id\": \"coastline\",\n        \"source\": \"maplibre\",\n        \"source-layer\": \"countries\",\n        \"type\": \"line\",\n        \"paint\": {\"line-color\": \"#198EC8\"}\n    }\n]\n</code></pre>"},{"location":"layers/#layer-properties","title":"Layer Properties","text":""},{"location":"layers/#id","title":"id","text":"<p>Required string.</p> <p>Unique layer name.</p>"},{"location":"layers/#type","title":"type","text":"<p>Required enum. Possible values: <code>fill</code>, <code>line</code>, <code>symbol</code>, <code>circle</code>, <code>heatmap</code>, <code>fill-extrusion</code>, <code>raster</code>, <code>hillshade</code>, <code>color-relief</code>, <code>background</code>.</p> <p>Rendering type of this layer.</p> <ul> <li><code>fill</code>: A filled polygon with an optional stroked border.</li> <li><code>line</code>: A stroked line.</li> <li><code>symbol</code>: An icon or a text label.</li> <li><code>circle</code>: A filled circle.</li> <li><code>heatmap</code>: A heatmap.</li> <li><code>fill-extrusion</code>: An extruded (3D) polygon.</li> <li><code>raster</code>: Raster map textures such as satellite imagery.</li> <li><code>hillshade</code>: Client-side hillshading visualization based on DEM data. The implementation supports Mapbox Terrain RGB, Mapzen Terrarium tiles and custom encodings.</li> <li><code>color-relief</code>: Client-side elevation coloring based on DEM data. The implementation supports Mapbox Terrain RGB, Mapzen Terrarium tiles and custom encodings.</li> <li><code>background</code>: The background color or pattern of the map.</li> </ul>"},{"location":"layers/#metadata","title":"metadata","text":"<p>Optional.</p> <p>Arbitrary properties useful to track with the layer, but do not influence rendering. Properties should be prefixed to avoid collisions, like 'maplibre:'.</p> <pre><code>\"metadata\": {\"source:comment\": \"Hydrology FCCODE 460 - Narrow wash\"}\n</code></pre>"},{"location":"layers/#source","title":"source","text":"<p>Optional string.</p> <p>Name of a source description to be used for this layer. Required for all layer types except <code>background</code>.</p>"},{"location":"layers/#source-layer","title":"source-layer","text":"<p>Optional string.</p> <p>Layer to use from a vector tile source. Required for vector tile sources; prohibited for all other source types, including GeoJSON sources.</p>"},{"location":"layers/#minzoom","title":"minzoom","text":"<p>Optional number in range [0, 24].</p> <p>The minimum zoom level for the layer. At zoom levels less than the minzoom, the layer will be hidden.</p>"},{"location":"layers/#maxzoom","title":"maxzoom","text":"<p>Optional number in range [0, 24].</p> <p>The maximum zoom level for the layer. At zoom levels equal to or greater than the maxzoom, the layer will be hidden.</p>"},{"location":"layers/#filter","title":"filter","text":"<p>Optional filter.</p> <p>A expression specifying conditions on source features. Only features that match the filter are displayed. Zoom expressions in filters are only evaluated at integer zoom levels. The <code>feature-state</code> expression is not supported in filter expressions.</p>"},{"location":"layers/#layout","title":"layout","text":"<p>Optional layout.</p> <p>Layout properties for the layer.</p>"},{"location":"layers/#paint","title":"paint","text":"<p>Optional paint.</p> <p>Default paint properties for this layer.</p>"},{"location":"layers/#background","title":"Background","text":""},{"location":"layers/#visibility","title":"visibility","text":"<p>Layout property. Optional enum. Possible values: <code>visible</code>, <code>none</code>. Defaults to <code>\"visible\"</code>.</p> <p>Whether this layer is displayed.</p> <ul> <li><code>visible</code>: The layer is shown.</li> <li><code>none</code>: The layer is not shown.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#background-color","title":"background-color","text":"<p>Paint property. Optional color. Defaults to <code>\"#000000\"</code>. Disabled by <code>background-pattern</code>. Supports interpolate expressions. Transitionable.</p> <p>The color with which the background will be drawn.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#background-pattern","title":"background-pattern","text":"<p>Paint property. Optional resolvedImage. Transitionable.</p> <p>Name of image in sprite to use for drawing an image background. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling Not supported yet Not supported yet Not supported yet"},{"location":"layers/#background-opacity","title":"background-opacity","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>1</code>. Supports interpolate expressions. Transitionable.</p> <p>The opacity at which the background will be drawn.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#fill","title":"Fill","text":""},{"location":"layers/#fill-sort-key","title":"fill-sort-key","text":"<p>Layout property. Optional number.</p> <p>Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 1.2.0 9.1.0 5.8.0 data-driven styling 1.2.0 9.1.0 5.8.0"},{"location":"layers/#visibility_1","title":"visibility","text":"<p>Layout property. Optional enum. Possible values: <code>visible</code>, <code>none</code>. Defaults to <code>\"visible\"</code>.</p> <p>Whether this layer is displayed.</p> <ul> <li><code>visible</code>: The layer is shown.</li> <li><code>none</code>: The layer is not shown.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#fill-antialias","title":"fill-antialias","text":"<p>Paint property. Optional boolean. Defaults to <code>true</code>.</p> <p>Whether or not the fill should be antialiased.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#fill-opacity","title":"fill-opacity","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>1</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The opacity of the entire fill layer. In contrast to the <code>fill-color</code>, this value will also affect the 1px stroke around the fill, if the stroke is used.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.21.0 5.0.0 3.5.0"},{"location":"layers/#fill-color","title":"fill-color","text":"<p>Paint property. Optional color. Defaults to <code>\"#000000\"</code>. Disabled by <code>fill-pattern</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The color of the filled part of this layer. This color can be specified as <code>rgba</code> with an alpha component and the color's opacity will not affect the opacity of the 1px stroke, if it is used.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.19.0 5.0.0 3.5.0"},{"location":"layers/#fill-outline-color","title":"fill-outline-color","text":"<p>Paint property. Optional color. Disabled by <code>fill-pattern</code>. Requires <code>fill-antialias</code> to be <code>true</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The outline color of the fill. Matches the value of <code>fill-color</code> if unspecified.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.19.0 5.0.0 3.5.0"},{"location":"layers/#fill-translate","title":"fill-translate","text":"<p>Paint property. Optional array. Units in pixels. Defaults to <code>[0,0]</code>. Supports interpolate expressions. Transitionable.</p> <p>The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#fill-translate-anchor","title":"fill-translate-anchor","text":"<p>Paint property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>. Defaults to <code>\"map\"</code>. Requires <code>fill-translate</code>.</p> <p>Controls the frame of reference for <code>fill-translate</code>.</p> <ul> <li><code>map</code>: The fill is translated relative to the map.</li> <li><code>viewport</code>: The fill is translated relative to the viewport.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#fill-pattern","title":"fill-pattern","text":"<p>Paint property. Optional resolvedImage. Transitionable.</p> <p>Name of image in sprite to use for drawing image fills. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.49.0 6.5.0 4.4.0"},{"location":"layers/#circle","title":"Circle","text":""},{"location":"layers/#circle-sort-key","title":"circle-sort-key","text":"<p>Layout property. Optional number.</p> <p>Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 1.2.0 9.2.0 5.9.0 data-driven styling 1.2.0 9.2.0 5.9.0"},{"location":"layers/#visibility_2","title":"visibility","text":"<p>Layout property. Optional enum. Possible values: <code>visible</code>, <code>none</code>. Defaults to <code>\"visible\"</code>.</p> <p>Whether this layer is displayed.</p> <ul> <li><code>visible</code>: The layer is shown.</li> <li><code>none</code>: The layer is not shown.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#circle-radius","title":"circle-radius","text":"<p>Paint property. Optional number in range [0, \u221e). Units in pixels. Defaults to <code>5</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>Circle radius.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.18.0 5.0.0 3.5.0"},{"location":"layers/#circle-color","title":"circle-color","text":"<p>Paint property. Optional color. Defaults to <code>\"#000000\"</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The fill color of the circle.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.18.0 5.0.0 3.5.0"},{"location":"layers/#circle-blur","title":"circle-blur","text":"<p>Paint property. Optional number. Defaults to <code>0</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>Amount to blur the circle. 1 blurs the circle such that only the centerpoint is full opacity.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.20.0 5.0.0 3.5.0"},{"location":"layers/#circle-opacity","title":"circle-opacity","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>1</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The opacity at which the circle will be drawn.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.20.0 5.0.0 3.5.0"},{"location":"layers/#circle-translate","title":"circle-translate","text":"<p>Paint property. Optional array. Units in pixels. Defaults to <code>[0,0]</code>. Supports interpolate expressions. Transitionable.</p> <p>The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#circle-translate-anchor","title":"circle-translate-anchor","text":"<p>Paint property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>. Defaults to <code>\"map\"</code>. Requires <code>circle-translate</code>.</p> <p>Controls the frame of reference for <code>circle-translate</code>.</p> <ul> <li><code>map</code>: The circle is translated relative to the map.</li> <li><code>viewport</code>: The circle is translated relative to the viewport.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#circle-pitch-scale","title":"circle-pitch-scale","text":"<p>Paint property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>. Defaults to <code>\"map\"</code>.</p> <p>Controls the scaling behavior of the circle when the map is pitched.</p> <ul> <li><code>map</code>: Circles are scaled according to their apparent distance to the camera.</li> <li><code>viewport</code>: Circles are not scaled.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.21.0 4.2.0 3.4.0"},{"location":"layers/#circle-pitch-alignment","title":"circle-pitch-alignment","text":"<p>Paint property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>. Defaults to <code>\"viewport\"</code>.</p> <p>Orientation of circle when map is pitched.</p> <ul> <li><code>map</code>: The circle is aligned to the plane of the map.</li> <li><code>viewport</code>: The circle is aligned to the plane of the viewport.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.39.0 5.2.0 3.7.0"},{"location":"layers/#circle-stroke-width","title":"circle-stroke-width","text":"<p>Paint property. Optional number in range [0, \u221e). Units in pixels. Defaults to <code>0</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The width of the circle's stroke. Strokes are placed outside of the <code>circle-radius</code>.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.29.0 5.0.0 3.5.0 data-driven styling 0.29.0 5.0.0 3.5.0"},{"location":"layers/#circle-stroke-color","title":"circle-stroke-color","text":"<p>Paint property. Optional color. Defaults to <code>\"#000000\"</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The stroke color of the circle.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.29.0 5.0.0 3.5.0 data-driven styling 0.29.0 5.0.0 3.5.0"},{"location":"layers/#circle-stroke-opacity","title":"circle-stroke-opacity","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>1</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The opacity of the circle's stroke.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.29.0 5.0.0 3.5.0 data-driven styling 0.29.0 5.0.0 3.5.0"},{"location":"layers/#heatmap","title":"Heatmap","text":""},{"location":"layers/#visibility_3","title":"visibility","text":"<p>Layout property. Optional enum. Possible values: <code>visible</code>, <code>none</code>. Defaults to <code>\"visible\"</code>.</p> <p>Whether this layer is displayed.</p> <ul> <li><code>visible</code>: The layer is shown.</li> <li><code>none</code>: The layer is not shown.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"layers/#heatmap-radius","title":"heatmap-radius","text":"<p>Paint property. Optional number in range [1, \u221e). Units in pixels. Defaults to <code>30</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>Radius of influence of one heatmap point in pixels. Increasing the value makes the heatmap smoother, but less detailed.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0 data-driven styling 0.43.0 6.0.0 4.0.0"},{"location":"layers/#heatmap-weight","title":"heatmap-weight","text":"<p>Paint property. Optional number in range [0, \u221e). Defaults to <code>1</code>. Supports feature-state and interpolate expressions.</p> <p>A measure of how much an individual point contributes to the heatmap. A value of 10 would be equivalent to having 10 points of weight 1 in the same spot. Especially useful when combined with clustering.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0 data-driven styling 0.41.0 6.0.0 4.0.0"},{"location":"layers/#heatmap-intensity","title":"heatmap-intensity","text":"<p>Paint property. Optional number in range [0, \u221e). Defaults to <code>1</code>. Supports interpolate expressions. Transitionable.</p> <p>Similar to <code>heatmap-weight</code> but controls the intensity of the heatmap globally. Primarily used for adjusting the heatmap based on zoom level.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"layers/#heatmap-color","title":"heatmap-color","text":"<p>Paint property. Optional color. Defaults to <code>[\"interpolate\",[\"linear\"],[\"heatmap-density\"],0,\"rgba(0, 0, 255, 0)\",0.1,\"royalblue\",0.3,\"cyan\",0.5,\"lime\",0.7,\"yellow\",1,\"red\"]</code>. Supports interpolate expressions.</p> <p>Defines the color of each pixel based on its density value in a heatmap.  Should be an expression that uses <code>[\"heatmap-density\"]</code> as input.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0 data-driven styling Not supported yet Not supported yet Not supported yet"},{"location":"layers/#heatmap-opacity","title":"heatmap-opacity","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>1</code>. Supports interpolate expressions. Transitionable.</p> <p>The global opacity at which the heatmap layer will be drawn.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.41.0 6.0.0 4.0.0"},{"location":"layers/#fill-extrusion","title":"Fill-extrusion","text":""},{"location":"layers/#visibility_4","title":"visibility","text":"<p>Layout property. Optional enum. Possible values: <code>visible</code>, <code>none</code>. Defaults to <code>\"visible\"</code>.</p> <p>Whether this layer is displayed.</p> <ul> <li><code>visible</code>: The layer is shown.</li> <li><code>none</code>: The layer is not shown.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.27.0 5.1.0 3.6.0"},{"location":"layers/#fill-extrusion-opacity","title":"fill-extrusion-opacity","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>1</code>. Supports interpolate expressions. Transitionable.</p> <p>The opacity of the entire fill extrusion layer. This is rendered on a per-layer, not per-feature, basis, and data-driven styling is not available.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.27.0 5.1.0 3.6.0"},{"location":"layers/#fill-extrusion-color","title":"fill-extrusion-color","text":"<p>Paint property. Optional color. Defaults to <code>\"#000000\"</code>. Disabled by <code>fill-extrusion-pattern</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The base color of the extruded fill. The extrusion's surfaces will be shaded differently based on this color in combination with the root <code>light</code> settings. If this color is specified as <code>rgba</code> with an alpha component, the alpha component will be ignored; use <code>fill-extrusion-opacity</code> to set layer opacity.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.27.0 5.1.0 3.6.0 data-driven styling 0.27.0 5.1.0 3.6.0"},{"location":"layers/#fill-extrusion-translate","title":"fill-extrusion-translate","text":"<p>Paint property. Optional array. Units in pixels. Defaults to <code>[0,0]</code>. Supports interpolate expressions. Transitionable.</p> <p>The geometry's offset. Values are [x, y] where negatives indicate left and up (on the flat plane), respectively.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.27.0 5.1.0 3.6.0"},{"location":"layers/#fill-extrusion-translate-anchor","title":"fill-extrusion-translate-anchor","text":"<p>Paint property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>. Defaults to <code>\"map\"</code>. Requires <code>fill-extrusion-translate</code>.</p> <p>Controls the frame of reference for <code>fill-extrusion-translate</code>.</p> <ul> <li><code>map</code>: The fill extrusion is translated relative to the map.</li> <li><code>viewport</code>: The fill extrusion is translated relative to the viewport.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.27.0 5.1.0 3.6.0"},{"location":"layers/#fill-extrusion-pattern","title":"fill-extrusion-pattern","text":"<p>Paint property. Optional resolvedImage. Transitionable.</p> <p>Name of image in sprite to use for drawing images on extruded fills. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.27.0 5.1.0 3.6.0 data-driven styling 0.49.0 6.5.0 4.4.0"},{"location":"layers/#fill-extrusion-height","title":"fill-extrusion-height","text":"<p>Paint property. Optional number in range [0, \u221e). Units in meters. Defaults to <code>0</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The height with which to extrude this layer.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.27.0 5.1.0 3.6.0 data-driven styling 0.27.0 5.1.0 3.6.0"},{"location":"layers/#fill-extrusion-base","title":"fill-extrusion-base","text":"<p>Paint property. Optional number in range [0, \u221e). Units in meters. Defaults to <code>0</code>. Requires <code>fill-extrusion-height</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The height with which to extrude the base of this layer. Must be less than or equal to <code>fill-extrusion-height</code>.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.27.0 5.1.0 3.6.0 data-driven styling 0.27.0 5.1.0 3.6.0"},{"location":"layers/#fill-extrusion-vertical-gradient","title":"fill-extrusion-vertical-gradient","text":"<p>Paint property. Optional boolean. Defaults to <code>true</code>.</p> <p>Whether to apply a vertical gradient to the sides of a fill-extrusion layer. If true, sides will be shaded slightly darker farther down.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.50.0 7.0.0 4.7.0"},{"location":"layers/#line","title":"Line","text":""},{"location":"layers/#line-cap","title":"line-cap","text":"<p>Layout property. Optional enum. Possible values: <code>butt</code>, <code>round</code>, <code>square</code>. Defaults to <code>\"butt\"</code>.</p> <p>The display of line endings.</p> <ul> <li><code>butt</code>: A cap with a squared-off end which is drawn to the exact endpoint of the line.</li> <li><code>round</code>: A cap with a rounded end which is drawn beyond the endpoint of the line at a radius of one-half of the line's width and centered on the endpoint of the line.</li> <li><code>square</code>: A cap with a squared-off end which is drawn beyond the endpoint of the line at a distance of one-half of the line's width.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#line-join","title":"line-join","text":"<p>Layout property. Optional enum. Possible values: <code>bevel</code>, <code>round</code>, <code>miter</code>. Defaults to <code>\"miter\"</code>.</p> <p>The display of lines when joining.</p> <ul> <li><code>bevel</code>: A join with a squared-off end which is drawn beyond the endpoint of the line at a distance of one-half of the line's width.</li> <li><code>round</code>: A join with a rounded end which is drawn beyond the endpoint of the line at a radius of one-half of the line's width and centered on the endpoint of the line.</li> <li><code>miter</code>: A join with a sharp, angled corner which is drawn with the outer sides beyond the endpoint of the path until they meet.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.40.0 5.2.0 3.7.0"},{"location":"layers/#line-miter-limit","title":"line-miter-limit","text":"<p>Layout property. Optional number. Defaults to <code>2</code>. Requires <code>line-join</code> to be <code>miter</code>. Supports interpolate expressions.</p> <p>Used to automatically convert miter joins to bevel joins for sharp angles.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#line-round-limit","title":"line-round-limit","text":"<p>Layout property. Optional number. Defaults to <code>1.05</code>. Requires <code>line-join</code> to be <code>round</code>. Supports interpolate expressions.</p> <p>Used to automatically convert round joins to miter joins for shallow angles.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#line-sort-key","title":"line-sort-key","text":"<p>Layout property. Optional number.</p> <p>Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 1.2.0 9.1.0 5.8.0 data-driven styling 1.2.0 9.1.0 5.8.0"},{"location":"layers/#visibility_5","title":"visibility","text":"<p>Layout property. Optional enum. Possible values: <code>visible</code>, <code>none</code>. Defaults to <code>\"visible\"</code>.</p> <p>Whether this layer is displayed.</p> <ul> <li><code>visible</code>: The layer is shown.</li> <li><code>none</code>: The layer is not shown.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#line-opacity","title":"line-opacity","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>1</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The opacity at which the line will be drawn.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.29.0 5.0.0 3.5.0"},{"location":"layers/#line-color","title":"line-color","text":"<p>Paint property. Optional color. Defaults to <code>\"#000000\"</code>. Disabled by <code>line-pattern</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The color with which the line will be drawn.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.23.0 5.0.0 3.5.0"},{"location":"layers/#line-translate","title":"line-translate","text":"<p>Paint property. Optional array. Units in pixels. Defaults to <code>[0,0]</code>. Supports interpolate expressions. Transitionable.</p> <p>The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#line-translate-anchor","title":"line-translate-anchor","text":"<p>Paint property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>. Defaults to <code>\"map\"</code>. Requires <code>line-translate</code>.</p> <p>Controls the frame of reference for <code>line-translate</code>.</p> <ul> <li><code>map</code>: The line is translated relative to the map.</li> <li><code>viewport</code>: The line is translated relative to the viewport.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#line-width","title":"line-width","text":"<p>Paint property. Optional number in range [0, \u221e). Units in pixels. Defaults to <code>1</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>Stroke thickness.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.39.0 5.2.0 3.7.0"},{"location":"layers/#line-gap-width","title":"line-gap-width","text":"<p>Paint property. Optional number in range [0, \u221e). Units in pixels. Defaults to <code>0</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>Draws a line casing outside of a line's actual path. Value indicates the width of the inner gap.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.29.0 5.0.0 3.5.0"},{"location":"layers/#line-offset","title":"line-offset","text":"<p>Paint property. Optional number. Units in pixels. Defaults to <code>0</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The line's offset. For linear features, a positive value offsets the line to the right, relative to the direction of the line, and a negative value to the left. For polygon features, a positive value results in an inset, and a negative value results in an outset.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.12.1 3.0.0 3.1.0 data-driven styling 0.29.0 5.0.0 3.5.0"},{"location":"layers/#line-blur","title":"line-blur","text":"<p>Paint property. Optional number in range [0, \u221e). Units in pixels. Defaults to <code>0</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>Blur applied to the line, in pixels.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.29.0 5.0.0 3.5.0"},{"location":"layers/#line-dasharray","title":"line-dasharray","text":"<p>Paint property. Optional array in range [0, \u221e). Units in line widths. Disabled by <code>line-pattern</code>. Transitionable.</p> <p>Specifies the lengths of the alternating dashes and gaps that form the dash pattern. The lengths are later scaled by the line width. To convert a dash length to pixels, multiply the length by the current line width. GeoJSON sources with <code>lineMetrics: true</code> specified won't render dashed lines to the expected scale. Zoom-dependent expressions will be evaluated only at integer zoom levels. The only way to create an array value is using <code>[\"literal\", [...]]</code>; arrays cannot be read from or derived from feature properties.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling \u274c (#1235) \u274c (#744) \u274c (#744)"},{"location":"layers/#line-pattern","title":"line-pattern","text":"<p>Paint property. Optional resolvedImage. Transitionable.</p> <p>Name of image in sprite to use for drawing image lines. For seamless patterns, image width must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.49.0 6.5.0 4.4.0"},{"location":"layers/#line-gradient","title":"line-gradient","text":"<p>Paint property. Optional color. Disabled by <code>line-dasharray</code>. Disabled by <code>line-pattern</code>. Requires source to be <code>geojson</code>. Supports interpolate expressions.</p> <p>Defines a gradient with which to color a line feature. Can only be used with GeoJSON sources that specify <code>\"lineMetrics\": true</code>.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.45.0 6.5.0 4.4.0 data-driven styling Not supported yet Not supported yet Not supported yet"},{"location":"layers/#symbol","title":"Symbol","text":""},{"location":"layers/#symbol-placement","title":"symbol-placement","text":"<p>Layout property. Optional enum. Possible values: <code>point</code>, <code>line</code>, <code>line-center</code>. Defaults to <code>\"point\"</code>.</p> <p>Label placement relative to its geometry.</p> <ul> <li><code>point</code>: The label is placed at the point where the geometry is located.</li> <li><code>line</code>: The label is placed along the line of the geometry. Can only be used on <code>LineString</code> and <code>Polygon</code> geometries.</li> <li><code>line-center</code>: The label is placed at the center of the line of the geometry. Can only be used on <code>LineString</code> and <code>Polygon</code> geometries. Note that a single feature in a vector tile may contain multiple line geometries.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 <code>line-center</code> value 0.47.0 6.4.0 4.3.0"},{"location":"layers/#symbol-spacing","title":"symbol-spacing","text":"<p>Layout property. Optional number in range [1, \u221e). Units in pixels. Defaults to <code>250</code>. Requires <code>symbol-placement</code> to be <code>line</code>. Supports interpolate expressions.</p> <p>Distance between two symbol anchors.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#symbol-avoid-edges","title":"symbol-avoid-edges","text":"<p>Layout property. Optional boolean. Defaults to <code>false</code>.</p> <p>If true, the symbols will not cross tile edges to avoid mutual collisions. Recommended in layers that don't have enough padding in the vector tile to prevent collisions, or if it is a point symbol layer placed after a line symbol layer. When using a client that supports global collision detection, like MapLibre GL JS version 0.42.0 or greater, enabling this property is not needed to prevent clipped labels at tile boundaries.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#symbol-sort-key","title":"symbol-sort-key","text":"<p>Layout property. Optional number.</p> <p>Sorts features in ascending order based on this value. Features with lower sort keys are drawn and placed first.  When <code>icon-allow-overlap</code> or <code>text-allow-overlap</code> is <code>false</code>, features with a lower sort key will have priority during placement. When <code>icon-allow-overlap</code> or <code>text-allow-overlap</code> is set to <code>true</code>, features with a higher sort key will overlap over features with a lower sort key.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.53.0 7.4.0 4.11.0 data-driven styling 0.53.0 7.4.0 4.11.0"},{"location":"layers/#symbol-z-order","title":"symbol-z-order","text":"<p>Layout property. Optional enum. Possible values: <code>auto</code>, <code>viewport-y</code>, <code>source</code>. Defaults to <code>\"auto\"</code>.</p> <p>Determines whether overlapping symbols in the same layer are rendered in the order that they appear in the data source or by their y-position relative to the viewport. To control the order and prioritization of symbols otherwise, use <code>symbol-sort-key</code>.</p> <ul> <li><code>auto</code>: Sorts symbols by <code>symbol-sort-key</code> if set. Otherwise, sorts symbols by their y-position relative to the viewport if <code>icon-allow-overlap</code> or <code>text-allow-overlap</code> is set to <code>true</code> or <code>icon-ignore-placement</code> or <code>text-ignore-placement</code> is <code>false</code>.</li> <li><code>viewport-y</code>: Sorts symbols by their y-position relative to the viewport if <code>icon-allow-overlap</code> or <code>text-allow-overlap</code> is set to <code>true</code> or <code>icon-ignore-placement</code> or <code>text-ignore-placement</code> is <code>false</code>.</li> <li><code>source</code>: Sorts symbols by <code>symbol-sort-key</code> if set. Otherwise, no sorting is applied; symbols are rendered in the same order as the source data.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.49.0 6.6.0 4.5.0"},{"location":"layers/#icon-allow-overlap","title":"icon-allow-overlap","text":"<p>Layout property. Optional boolean. Defaults to <code>false</code>. Requires <code>icon-image</code>. Disabled by <code>icon-overlap</code>.</p> <p>If true, the icon will be visible even if it collides with other previously drawn symbols.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#icon-overlap","title":"icon-overlap","text":"<p>Layout property. Optional enum. Possible values: <code>never</code>, <code>always</code>, <code>cooperative</code>. Requires <code>icon-image</code>.</p> <p>Allows for control over whether to show an icon when it overlaps other symbols on the map. If <code>icon-overlap</code> is not set, <code>icon-allow-overlap</code> is used instead.</p> <ul> <li><code>never</code>: The icon will be hidden if it collides with any other previously drawn symbol.</li> <li><code>always</code>: The icon will be visible even if it collides with any other previously drawn symbol.</li> <li><code>cooperative</code>: If the icon collides with another previously drawn symbol, the overlap mode for that symbol is checked. If the previous symbol was placed using <code>never</code> overlap mode, the new icon is hidden. If the previous symbol was placed using <code>always</code> or <code>cooperative</code> overlap mode, the new icon is visible.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 2.1.0 \u274c (#251) \u274c (#251)"},{"location":"layers/#icon-ignore-placement","title":"icon-ignore-placement","text":"<p>Layout property. Optional boolean. Defaults to <code>false</code>. Requires <code>icon-image</code>.</p> <p>If true, other symbols can be visible even if they collide with the icon.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#icon-optional","title":"icon-optional","text":"<p>Layout property. Optional boolean. Defaults to <code>false</code>. Requires <code>icon-image</code>. Requires <code>text-field</code>.</p> <p>If true, text will display without their corresponding icons when the icon collides with other symbols and the text does not.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#icon-rotation-alignment","title":"icon-rotation-alignment","text":"<p>Layout property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>, <code>auto</code>. Defaults to <code>\"auto\"</code>. Requires <code>icon-image</code>.</p> <p>In combination with <code>symbol-placement</code>, determines the rotation behavior of icons.</p> <ul> <li><code>map</code>: When <code>symbol-placement</code> is set to <code>point</code>, aligns icons east-west. When <code>symbol-placement</code> is set to <code>line</code> or <code>line-center</code>, aligns icon x-axes with the line.</li> <li><code>viewport</code>: Produces icons whose x-axes are aligned with the x-axis of the viewport, regardless of the value of <code>symbol-placement</code>.</li> <li><code>auto</code>: When <code>symbol-placement</code> is set to <code>point</code>, this is equivalent to <code>viewport</code>. When <code>symbol-placement</code> is set to <code>line</code> or <code>line-center</code>, this is equivalent to <code>map</code>.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 <code>auto</code> value 0.25.0 4.2.0 3.4.0"},{"location":"layers/#icon-size","title":"icon-size","text":"<p>Layout property. Optional number in range [0, \u221e). Units in factor of the original icon size. Defaults to <code>1</code>. Requires <code>icon-image</code>. Supports interpolate expressions.</p> <p>Scales the original size of the icon by the provided factor. The new pixel size of the image will be the original pixel size multiplied by <code>icon-size</code>. 1 is the original size; 3 triples the size of the image.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.35.0 5.1.0 3.6.0"},{"location":"layers/#icon-text-fit","title":"icon-text-fit","text":"<p>Layout property. Optional enum. Possible values: <code>none</code>, <code>width</code>, <code>height</code>, <code>both</code>. Defaults to <code>\"none\"</code>. Requires <code>icon-image</code>. Requires <code>text-field</code>.</p> <p>Scales the icon to fit around the associated text.</p> <ul> <li><code>none</code>: The icon is displayed at its intrinsic aspect ratio.</li> <li><code>width</code>: The icon is scaled in the x-dimension to fit the width of the text.</li> <li><code>height</code>: The icon is scaled in the y-dimension to fit the height of the text.</li> <li><code>both</code>: The icon is scaled in both x- and y-dimensions.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.21.0 4.2.0 3.4.0 stretchable icons 1.6.0 9.2.0 5.8.0"},{"location":"layers/#icon-text-fit-padding","title":"icon-text-fit-padding","text":"<p>Layout property. Optional array. Units in pixels. Defaults to <code>[0,0,0,0]</code>. Requires <code>icon-image</code>. Requires <code>text-field</code>. Requires <code>icon-text-fit</code> to be one of <code>both</code>, <code>width</code>, <code>height</code>. Supports interpolate expressions.</p> <p>Size of the additional area added to dimensions determined by <code>icon-text-fit</code>, in clockwise order: top, right, bottom, left.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.21.0 4.2.0 3.4.0"},{"location":"layers/#icon-image","title":"icon-image","text":"<p>Layout property. Optional resolvedImage.</p> <p>Name of image in sprite to use for drawing an image background.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.35.0 5.1.0 3.6.0"},{"location":"layers/#icon-rotate","title":"icon-rotate","text":"<p>Layout property. Optional number. Units in degrees. Defaults to <code>0</code>. Requires <code>icon-image</code>. Supports interpolate expressions.</p> <p>Rotates the icon clockwise.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.21.0 5.0.0 3.5.0"},{"location":"layers/#icon-padding","title":"icon-padding","text":"<p>Layout property. Optional padding. Units in pixels. Defaults to <code>[2]</code>. Requires <code>icon-image</code>. Supports interpolate expressions.</p> <p>Size of additional area round the icon bounding box used for detecting symbol collisions.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 2.2.0 \u274c (#2754) \u274c (#2754)"},{"location":"layers/#icon-keep-upright","title":"icon-keep-upright","text":"<p>Layout property. Optional boolean. Defaults to <code>false</code>. Requires <code>icon-image</code>. Requires <code>icon-rotation-alignment</code> to be <code>map</code>. Requires <code>symbol-placement</code> to be one of <code>line</code>, <code>line-center</code>.</p> <p>If true, the icon may be flipped to prevent it from being rendered upside-down.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#icon-offset","title":"icon-offset","text":"<p>Layout property. Optional array. Defaults to <code>[0,0]</code>. Requires <code>icon-image</code>. Supports interpolate expressions.</p> <p>Offset distance of icon from its anchor. Positive values indicate right and down, while negative values indicate left and up. Each component is multiplied by the value of <code>icon-size</code> to obtain the final offset in pixels. When combined with <code>icon-rotate</code> the offset will be as if the rotated direction was up.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.29.0 5.0.0 3.5.0"},{"location":"layers/#icon-anchor","title":"icon-anchor","text":"<p>Layout property. Optional enum. Possible values: <code>center</code>, <code>left</code>, <code>right</code>, <code>top</code>, <code>bottom</code>, <code>top-left</code>, <code>top-right</code>, <code>bottom-left</code>, <code>bottom-right</code>. Defaults to <code>\"center\"</code>. Requires <code>icon-image</code>.</p> <p>Part of the icon placed closest to the anchor.</p> <ul> <li><code>center</code>: The center of the icon is placed closest to the anchor.</li> <li><code>left</code>: The left side of the icon is placed closest to the anchor.</li> <li><code>right</code>: The right side of the icon is placed closest to the anchor.</li> <li><code>top</code>: The top of the icon is placed closest to the anchor.</li> <li><code>bottom</code>: The bottom of the icon is placed closest to the anchor.</li> <li><code>top-left</code>: The top left corner of the icon is placed closest to the anchor.</li> <li><code>top-right</code>: The top right corner of the icon is placed closest to the anchor.</li> <li><code>bottom-left</code>: The bottom left corner of the icon is placed closest to the anchor.</li> <li><code>bottom-right</code>: The bottom right corner of the icon is placed closest to the anchor.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.40.0 5.2.0 3.7.0 data-driven styling 0.40.0 5.2.0 3.7.0"},{"location":"layers/#icon-pitch-alignment","title":"icon-pitch-alignment","text":"<p>Layout property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>, <code>auto</code>. Defaults to <code>\"auto\"</code>. Requires <code>icon-image</code>.</p> <p>Orientation of icon when map is pitched.</p> <ul> <li><code>map</code>: The icon is aligned to the plane of the map.</li> <li><code>viewport</code>: The icon is aligned to the plane of the viewport.</li> <li><code>auto</code>: Automatically matches the value of <code>icon-rotation-alignment</code>.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.39.0 5.2.0 3.7.0"},{"location":"layers/#text-pitch-alignment","title":"text-pitch-alignment","text":"<p>Layout property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>, <code>auto</code>. Defaults to <code>\"auto\"</code>. Requires <code>text-field</code>.</p> <p>Orientation of text when map is pitched.</p> <ul> <li><code>map</code>: The text is aligned to the plane of the map.</li> <li><code>viewport</code>: The text is aligned to the plane of the viewport.</li> <li><code>auto</code>: Automatically matches the value of <code>text-rotation-alignment</code>.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.21.0 4.2.0 3.4.0 <code>auto</code> value 0.25.0 4.2.0 3.4.0"},{"location":"layers/#text-rotation-alignment","title":"text-rotation-alignment","text":"<p>Layout property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>, <code>viewport-glyph</code>, <code>auto</code>. Defaults to <code>\"auto\"</code>. Requires <code>text-field</code>.</p> <p>In combination with <code>symbol-placement</code>, determines the rotation behavior of the individual glyphs forming the text.</p> <ul> <li><code>map</code>: When <code>symbol-placement</code> is set to <code>point</code>, aligns text east-west. When <code>symbol-placement</code> is set to <code>line</code> or <code>line-center</code>, aligns text x-axes with the line.</li> <li><code>viewport</code>: Produces glyphs whose x-axes are aligned with the x-axis of the viewport, regardless of the value of <code>symbol-placement</code>.</li> <li><code>viewport-glyph</code>: When <code>symbol-placement</code> is set to <code>point</code>, aligns text to the x-axis of the viewport. When <code>symbol-placement</code> is set to <code>line</code> or <code>line-center</code>, aligns glyphs to the x-axis of the viewport and places them along the line.</li> <li><code>auto</code>: When <code>symbol-placement</code> is set to <code>point</code>, this is equivalent to <code>viewport</code>. When <code>symbol-placement</code> is set to <code>line</code> or <code>line-center</code>, this is equivalent to <code>map</code>.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 <code>auto</code> value 0.25.0 4.2.0 3.4.0 <code>viewport-glyph</code> value 2.1.8 \u274c (#250) \u274c (#250)"},{"location":"layers/#text-field","title":"text-field","text":"<p>Layout property. Optional formatted. Defaults to <code>\"\"</code>.</p> <p>Value to use for a text label. If a plain <code>string</code> is provided, it will be treated as a <code>formatted</code> with default/inherited formatting options.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.33.0 5.0.0 3.5.0"},{"location":"layers/#text-font","title":"text-font","text":"<p>Layout property. Optional array. Defaults to <code>[\"Open Sans Regular\",\"Arial Unicode MS Regular\"]</code>. Requires <code>text-field</code>.</p> <p>Fonts to use for displaying text. If the <code>glyphs</code> root property is specified, this array is joined together and interpreted as a font stack name. Otherwise, it is interpreted as a cascading fallback list of local font names.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.43.0 6.0.0 4.0.0 local fonts \u274c (#3302) \u274c (#165) \u274c (#165)"},{"location":"layers/#text-size","title":"text-size","text":"<p>Layout property. Optional number in range [0, \u221e). Units in pixels. Defaults to <code>16</code>. Requires <code>text-field</code>. Supports interpolate expressions.</p> <p>Font size.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.35.0 5.1.0 3.6.0"},{"location":"layers/#text-max-width","title":"text-max-width","text":"<p>Layout property. Optional number in range [0, \u221e). Units in ems. Defaults to <code>10</code>. Requires <code>text-field</code>. Supports interpolate expressions.</p> <p>The maximum line width for text wrapping.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.40.0 5.2.0 3.7.0"},{"location":"layers/#text-line-height","title":"text-line-height","text":"<p>Layout property. Optional number. Units in ems. Defaults to <code>1.2</code>. Requires <code>text-field</code>. Supports interpolate expressions.</p> <p>Text leading value for multi-line text.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#text-letter-spacing","title":"text-letter-spacing","text":"<p>Layout property. Optional number. Units in ems. Defaults to <code>0</code>. Requires <code>text-field</code>. Supports interpolate expressions.</p> <p>Text tracking amount.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.40.0 5.2.0 3.7.0"},{"location":"layers/#text-justify","title":"text-justify","text":"<p>Layout property. Optional enum. Possible values: <code>auto</code>, <code>left</code>, <code>center</code>, <code>right</code>. Defaults to <code>\"center\"</code>. Requires <code>text-field</code>.</p> <p>Text justification options.</p> <ul> <li><code>auto</code>: The text is aligned towards the anchor position.</li> <li><code>left</code>: The text is aligned to the left.</li> <li><code>center</code>: The text is centered.</li> <li><code>right</code>: The text is aligned to the right.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.39.0 5.2.0 3.7.0 auto 0.54.0 7.4.0 4.10.0"},{"location":"layers/#text-radial-offset","title":"text-radial-offset","text":"<p>Layout property. Optional number. Units in ems. Defaults to <code>0</code>. Requires <code>text-field</code>. Supports interpolate expressions.</p> <p>Radial offset of text, in the direction of the symbol's anchor. Useful in combination with <code>text-variable-anchor</code>, which defaults to using the two-dimensional <code>text-offset</code> if present.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.54.0 7.4.0 4.10.0 data-driven styling 0.54.0 7.4.0 4.10.0"},{"location":"layers/#text-variable-anchor","title":"text-variable-anchor","text":"<p>Layout property. Optional array. Requires <code>text-field</code>. Requires <code>symbol-placement</code> to be <code>point</code>.</p> <p>To increase the chance of placing high-priority labels on the map, you can provide an array of <code>text-anchor</code> locations: the renderer will attempt to place the label at each location, in order, before moving onto the next label. Use <code>text-justify: auto</code> to choose justification based on anchor position. To apply an offset, use the <code>text-radial-offset</code> or the two-dimensional <code>text-offset</code>.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.54.0 7.4.0 4.10.0"},{"location":"layers/#text-variable-anchor-offset","title":"text-variable-anchor-offset","text":"<p>Layout property. Optional. Requires <code>text-field</code>. Requires <code>symbol-placement</code> to be <code>point</code>. Supports interpolate expressions.</p> <p>To increase the chance of placing high-priority labels on the map, you can provide an array of <code>text-anchor</code> locations, each paired with an offset value. The renderer will attempt to place the label at each location, in order, before moving on to the next location+offset. Use <code>text-justify: auto</code> to choose justification based on anchor position. </p> <p>The length of the array must be even, and must alternate between enum and point entries. i.e., each anchor location must be accompanied by a point, and that point defines the offset when the corresponding anchor location is used. Positive offset values indicate right and down, while negative values indicate left and up. Anchor locations may repeat, allowing the renderer to try multiple offsets to try and place a label using the same anchor. </p> <p>When present, this property takes precedence over <code>text-anchor</code>, <code>text-variable-anchor</code>, <code>text-offset</code>, and <code>text-radial-offset</code>. </p> <pre><code>{ \"text-variable-anchor-offset\": [\"top\", [0, 4], \"left\", [3,0], \"bottom\", [1, 1]] } \n</code></pre> <p>When the renderer chooses the <code>top</code> anchor, <code>[0, 4]</code> will be used for <code>text-offset</code>; the text will be shifted down by 4 ems. </p> <p>When the renderer chooses the <code>left</code> anchor, <code>[3, 0]</code> will be used for <code>text-offset</code>; the text will be shifted right by 3 ems.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 3.3.0 11.6.0 6.8.0 data-driven styling 3.3.0 \u274c (#2358) \u274c (#2358)"},{"location":"layers/#text-anchor","title":"text-anchor","text":"<p>Layout property. Optional enum. Possible values: <code>center</code>, <code>left</code>, <code>right</code>, <code>top</code>, <code>bottom</code>, <code>top-left</code>, <code>top-right</code>, <code>bottom-left</code>, <code>bottom-right</code>. Defaults to <code>\"center\"</code>. Requires <code>text-field</code>. Disabled by <code>text-variable-anchor</code>.</p> <p>Part of the text placed closest to the anchor.</p> <ul> <li><code>center</code>: The center of the text is placed closest to the anchor.</li> <li><code>left</code>: The left side of the text is placed closest to the anchor.</li> <li><code>right</code>: The right side of the text is placed closest to the anchor.</li> <li><code>top</code>: The top of the text is placed closest to the anchor.</li> <li><code>bottom</code>: The bottom of the text is placed closest to the anchor.</li> <li><code>top-left</code>: The top left corner of the text is placed closest to the anchor.</li> <li><code>top-right</code>: The top right corner of the text is placed closest to the anchor.</li> <li><code>bottom-left</code>: The bottom left corner of the text is placed closest to the anchor.</li> <li><code>bottom-right</code>: The bottom right corner of the text is placed closest to the anchor.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.39.0 5.2.0 3.7.0"},{"location":"layers/#text-max-angle","title":"text-max-angle","text":"<p>Layout property. Optional number. Units in degrees. Defaults to <code>45</code>. Requires <code>text-field</code>. Requires <code>symbol-placement</code> to be one of <code>line</code>, <code>line-center</code>. Supports interpolate expressions.</p> <p>Maximum angle change between adjacent characters.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#text-writing-mode","title":"text-writing-mode","text":"<p>Layout property. Optional array. Requires <code>text-field</code>. Requires <code>symbol-placement</code> to be <code>point</code>.</p> <p>The property allows control over a symbol's orientation. Note that the property values act as a hint, so that a symbol whose language doesn\u2019t support the provided orientation will be laid out in its natural orientation. Example: English point symbol will be rendered horizontally even if array value contains single 'vertical' enum value. The order of elements in an array define priority order for the placement of an orientation variant.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 1.3.0 8.3.0 5.3.0"},{"location":"layers/#text-rotate","title":"text-rotate","text":"<p>Layout property. Optional number. Units in degrees. Defaults to <code>0</code>. Requires <code>text-field</code>. Supports interpolate expressions.</p> <p>Rotates the text clockwise.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.35.0 5.1.0 3.6.0"},{"location":"layers/#text-padding","title":"text-padding","text":"<p>Layout property. Optional number in range [0, \u221e). Units in pixels. Defaults to <code>2</code>. Requires <code>text-field</code>. Supports interpolate expressions.</p> <p>Size of the additional area around the text bounding box used for detecting symbol collisions.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#text-keep-upright","title":"text-keep-upright","text":"<p>Layout property. Optional boolean. Defaults to <code>true</code>. Requires <code>text-field</code>. Requires <code>text-rotation-alignment</code> to be <code>map</code>. Requires <code>symbol-placement</code> to be one of <code>line</code>, <code>line-center</code>.</p> <p>If true, the text may be flipped vertically to prevent it from being rendered upside-down.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#text-transform","title":"text-transform","text":"<p>Layout property. Optional enum. Possible values: <code>none</code>, <code>uppercase</code>, <code>lowercase</code>. Defaults to <code>\"none\"</code>. Requires <code>text-field</code>.</p> <p>Specifies how to capitalize text, similar to the CSS <code>text-transform</code> property.</p> <ul> <li><code>none</code>: The text is not altered.</li> <li><code>uppercase</code>: Forces all letters to be displayed in uppercase.</li> <li><code>lowercase</code>: Forces all letters to be displayed in lowercase.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.33.0 5.0.0 3.5.0"},{"location":"layers/#text-offset","title":"text-offset","text":"<p>Layout property. Optional array. Units in ems. Defaults to <code>[0,0]</code>. Requires <code>text-field</code>. Disabled by <code>text-radial-offset</code>. Supports interpolate expressions.</p> <p>Offset distance of text from its anchor. Positive values indicate right and down, while negative values indicate left and up. If used with text-variable-anchor, input values will be taken as absolute values. Offsets along the x- and y-axis will be applied automatically based on the anchor position.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.35.0 5.1.0 3.6.0"},{"location":"layers/#text-allow-overlap","title":"text-allow-overlap","text":"<p>Layout property. Optional boolean. Defaults to <code>false</code>. Requires <code>text-field</code>. Disabled by <code>text-overlap</code>.</p> <p>If true, the text will be visible even if it collides with other previously drawn symbols.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#text-overlap","title":"text-overlap","text":"<p>Layout property. Optional enum. Possible values: <code>never</code>, <code>always</code>, <code>cooperative</code>. Requires <code>text-field</code>.</p> <p>Allows for control over whether to show symbol text when it overlaps other symbols on the map. If <code>text-overlap</code> is not set, <code>text-allow-overlap</code> is used instead</p> <ul> <li><code>never</code>: The text will be hidden if it collides with any other previously drawn symbol.</li> <li><code>always</code>: The text will be visible even if it collides with any other previously drawn symbol.</li> <li><code>cooperative</code>: If the text collides with another previously drawn symbol, the overlap mode for that symbol is checked. If the previous symbol was placed using <code>never</code> overlap mode, the new text is hidden. If the previous symbol was placed using <code>always</code> or <code>cooperative</code> overlap mode, the new text is visible.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 2.1.0 \u274c (#251) \u274c (#251)"},{"location":"layers/#text-ignore-placement","title":"text-ignore-placement","text":"<p>Layout property. Optional boolean. Defaults to <code>false</code>. Requires <code>text-field</code>.</p> <p>If true, other symbols can be visible even if they collide with the text.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#text-optional","title":"text-optional","text":"<p>Layout property. Optional boolean. Defaults to <code>false</code>. Requires <code>text-field</code>. Requires <code>icon-image</code>.</p> <p>If true, icons will display without their corresponding text when the text collides with other symbols and the icon does not.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#visibility_6","title":"visibility","text":"<p>Layout property. Optional enum. Possible values: <code>visible</code>, <code>none</code>. Defaults to <code>\"visible\"</code>.</p> <p>Whether this layer is displayed.</p> <ul> <li><code>visible</code>: The layer is shown.</li> <li><code>none</code>: The layer is not shown.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#icon-opacity","title":"icon-opacity","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>1</code>. Requires <code>icon-image</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The opacity at which the icon will be drawn.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.33.0 5.0.0 3.5.0"},{"location":"layers/#icon-color","title":"icon-color","text":"<p>Paint property. Optional color. Defaults to <code>\"#000000\"</code>. Requires <code>icon-image</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The color of the icon. This can only be used with SDF icons.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.33.0 5.0.0 3.5.0"},{"location":"layers/#icon-halo-color","title":"icon-halo-color","text":"<p>Paint property. Optional color. Defaults to <code>\"rgba(0, 0, 0, 0)\"</code>. Requires <code>icon-image</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The color of the icon's halo. Icon halos can only be used with SDF icons.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.33.0 5.0.0 3.5.0"},{"location":"layers/#icon-halo-width","title":"icon-halo-width","text":"<p>Paint property. Optional number in range [0, \u221e). Units in pixels. Defaults to <code>0</code>. Requires <code>icon-image</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>Distance of halo to the icon outline. </p> <p>The unit is in pixels only for SDF sprites that were created with a blur radius of 8, multiplied by the display density. I.e., the radius needs to be 16 for <code>@2x</code> sprites, etc.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.33.0 5.0.0 3.5.0"},{"location":"layers/#icon-halo-blur","title":"icon-halo-blur","text":"<p>Paint property. Optional number in range [0, \u221e). Units in pixels. Defaults to <code>0</code>. Requires <code>icon-image</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>Fade out the halo towards the outside.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.33.0 5.0.0 3.5.0"},{"location":"layers/#icon-translate","title":"icon-translate","text":"<p>Paint property. Optional array. Units in pixels. Defaults to <code>[0,0]</code>. Requires <code>icon-image</code>. Supports interpolate expressions. Transitionable.</p> <p>Distance that the icon's anchor is moved from its original placement. Positive values indicate right and down, while negative values indicate left and up.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#icon-translate-anchor","title":"icon-translate-anchor","text":"<p>Paint property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>. Defaults to <code>\"map\"</code>. Requires <code>icon-image</code>. Requires <code>icon-translate</code>.</p> <p>Controls the frame of reference for <code>icon-translate</code>.</p> <ul> <li><code>map</code>: Icons are translated relative to the map.</li> <li><code>viewport</code>: Icons are translated relative to the viewport.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#text-opacity","title":"text-opacity","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>1</code>. Requires <code>text-field</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The opacity at which the text will be drawn.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.33.0 5.0.0 3.5.0"},{"location":"layers/#text-color","title":"text-color","text":"<p>Paint property. Optional color. Defaults to <code>\"#000000\"</code>. Requires <code>text-field</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The color with which the text will be drawn.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.33.0 5.0.0 3.5.0"},{"location":"layers/#text-halo-color","title":"text-halo-color","text":"<p>Paint property. Optional color. Defaults to <code>\"rgba(0, 0, 0, 0)\"</code>. Requires <code>text-field</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The color of the text's halo, which helps it stand out from backgrounds.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.33.0 5.0.0 3.5.0"},{"location":"layers/#text-halo-width","title":"text-halo-width","text":"<p>Paint property. Optional number in range [0, \u221e). Units in pixels. Defaults to <code>0</code>. Requires <code>text-field</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>Distance of halo to the font outline. Max text halo width is 1/4 of the font-size.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.33.0 5.0.0 3.5.0"},{"location":"layers/#text-halo-blur","title":"text-halo-blur","text":"<p>Paint property. Optional number in range [0, \u221e). Units in pixels. Defaults to <code>0</code>. Requires <code>text-field</code>. Supports feature-state and interpolate expressions. Transitionable.</p> <p>The halo's fadeout distance towards the outside.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 data-driven styling 0.33.0 5.0.0 3.5.0"},{"location":"layers/#text-translate","title":"text-translate","text":"<p>Paint property. Optional array. Units in pixels. Defaults to <code>[0,0]</code>. Requires <code>text-field</code>. Supports interpolate expressions. Transitionable.</p> <p>Distance that the text's anchor is moved from its original placement. Positive values indicate right and down, while negative values indicate left and up.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#text-translate-anchor","title":"text-translate-anchor","text":"<p>Paint property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>. Defaults to <code>\"map\"</code>. Requires <code>text-field</code>. Requires <code>text-translate</code>.</p> <p>Controls the frame of reference for <code>text-translate</code>.</p> <ul> <li><code>map</code>: The text is translated relative to the map.</li> <li><code>viewport</code>: The text is translated relative to the viewport.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#raster","title":"Raster","text":""},{"location":"layers/#visibility_7","title":"visibility","text":"<p>Layout property. Optional enum. Possible values: <code>visible</code>, <code>none</code>. Defaults to <code>\"visible\"</code>.</p> <p>Whether this layer is displayed.</p> <ul> <li><code>visible</code>: The layer is shown.</li> <li><code>none</code>: The layer is not shown.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#raster-opacity","title":"raster-opacity","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>1</code>. Supports interpolate expressions. Transitionable.</p> <p>The opacity at which the image will be drawn.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#raster-hue-rotate","title":"raster-hue-rotate","text":"<p>Paint property. Optional number. Units in degrees. Defaults to <code>0</code>. Supports interpolate expressions. Transitionable.</p> <p>Rotates hues around the color wheel.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#raster-brightness-min","title":"raster-brightness-min","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>0</code>. Supports interpolate expressions. Transitionable.</p> <p>Increase or reduce the brightness of the image. The value is the minimum brightness.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#raster-brightness-max","title":"raster-brightness-max","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>1</code>. Supports interpolate expressions. Transitionable.</p> <p>Increase or reduce the brightness of the image. The value is the maximum brightness.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#raster-saturation","title":"raster-saturation","text":"<p>Paint property. Optional number in range [-1, 1]. Defaults to <code>0</code>. Supports interpolate expressions. Transitionable.</p> <p>Increase or reduce the saturation of the image.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#raster-contrast","title":"raster-contrast","text":"<p>Paint property. Optional number in range [-1, 1]. Defaults to <code>0</code>. Supports interpolate expressions. Transitionable.</p> <p>Increase or reduce the contrast of the image.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#raster-resampling","title":"raster-resampling","text":"<p>Paint property. Optional enum. Possible values: <code>linear</code>, <code>nearest</code>. Defaults to <code>\"linear\"</code>.</p> <p>The resampling/interpolation method to use for overscaling, also known as texture magnification filter</p> <ul> <li><code>linear</code>: (Bi)linear filtering interpolates pixel values using the weighted average of the four closest original source pixels creating a smooth but blurry look when overscaled</li> <li><code>nearest</code>: Nearest neighbor filtering interpolates pixel values using the nearest original source pixel creating a sharp but pixelated look when overscaled</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.47.0 6.3.0 4.2.0"},{"location":"layers/#raster-fade-duration","title":"raster-fade-duration","text":"<p>Paint property. Optional number in range [0, \u221e). Units in milliseconds. Defaults to <code>300</code>. Supports interpolate expressions.</p> <p>Fade duration when a new tile is added, or when a video is started or its coordinates are updated.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"layers/#hillshade","title":"Hillshade","text":""},{"location":"layers/#visibility_8","title":"visibility","text":"<p>Layout property. Optional enum. Possible values: <code>visible</code>, <code>none</code>. Defaults to <code>\"visible\"</code>.</p> <p>Whether this layer is displayed.</p> <ul> <li><code>visible</code>: The layer is shown.</li> <li><code>none</code>: The layer is not shown.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.43.0 6.0.0 4.0.0"},{"location":"layers/#hillshade-illumination-direction","title":"hillshade-illumination-direction","text":"<p>Paint property. Optional numberArray with value(s) in range [0, 359]. Defaults to <code>335</code>. Supports interpolate expressions.</p> <p>The direction of the light source(s) used to generate the hillshading with 0 as the top of the viewport if <code>hillshade-illumination-anchor</code> is set to <code>viewport</code> and due north if <code>hillshade-illumination-anchor</code> is set to <code>map</code>. Only when <code>hillshade-method</code> is set to <code>multidirectional</code> can you specify multiple light sources.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.43.0 6.0.0 4.0.0 multidirectional 5.5.0 \u274c (#3396) \u274c (#3396)"},{"location":"layers/#hillshade-illumination-altitude","title":"hillshade-illumination-altitude","text":"<p>Paint property. Optional numberArray with value(s) in range [0, 90]. Defaults to <code>45</code>. Supports interpolate expressions.</p> <p>The altitude of the light source(s) used to generate the hillshading with 0 as sunset and 90 as noon. Only when <code>hillshade-method</code> is set to <code>multidirectional</code> can you specify multiple light sources.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 5.5.0 \u274c (#3396) \u274c (#3396) multidirectional 5.5.0 \u274c (#3396) \u274c (#3396)"},{"location":"layers/#hillshade-illumination-anchor","title":"hillshade-illumination-anchor","text":"<p>Paint property. Optional enum. Possible values: <code>map</code>, <code>viewport</code>. Defaults to <code>\"viewport\"</code>.</p> <p>Direction of light source when map is rotated.</p> <ul> <li><code>map</code>: The hillshade illumination is relative to the north direction.</li> <li><code>viewport</code>: The hillshade illumination is relative to the top of the viewport.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.43.0 6.0.0 4.0.0"},{"location":"layers/#hillshade-exaggeration","title":"hillshade-exaggeration","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>0.5</code>. Supports interpolate expressions. Transitionable.</p> <p>Intensity of the hillshade</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.43.0 6.0.0 4.0.0"},{"location":"layers/#hillshade-shadow-color","title":"hillshade-shadow-color","text":"<p>Paint property. Optional colorArray. Defaults to <code>\"#000000\"</code>. Supports interpolate expressions. Transitionable.</p> <p>The shading color of areas that face away from the light source(s). Only when <code>hillshade-method</code> is set to <code>multidirectional</code> can you specify multiple light sources.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.43.0 6.0.0 4.0.0 multidirectional 5.5.0 \u274c (#3396) \u274c (#3396)"},{"location":"layers/#hillshade-highlight-color","title":"hillshade-highlight-color","text":"<p>Paint property. Optional colorArray. Defaults to <code>\"#FFFFFF\"</code>. Supports interpolate expressions. Transitionable.</p> <p>The shading color of areas that faces towards the light source(s). Only when <code>hillshade-method</code> is set to <code>multidirectional</code> can you specify multiple light sources.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.43.0 6.0.0 4.0.0 multidirectional 5.5.0 \u274c (#3396) \u274c (#3396)"},{"location":"layers/#hillshade-accent-color","title":"hillshade-accent-color","text":"<p>Paint property. Optional color. Defaults to <code>\"#000000\"</code>. Supports interpolate expressions. Transitionable.</p> <p>The shading color used to accentuate rugged terrain like sharp cliffs and gorges.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.43.0 6.0.0 4.0.0"},{"location":"layers/#hillshade-method","title":"hillshade-method","text":"<p>Paint property. Optional enum. Possible values: <code>standard</code>, <code>basic</code>, <code>combined</code>, <code>igor</code>, <code>multidirectional</code>. Defaults to <code>\"standard\"</code>.</p> <p>The hillshade algorithm to use, one of <code>standard</code>, <code>basic</code>, <code>combined</code>, <code>igor</code>, or <code>multidirectional</code>. </p> <ul> <li><code>standard</code>: The legacy hillshade method.</li> <li><code>basic</code>: Basic hillshade. Uses a simple physics model where the reflected light intensity is proportional to the cosine of the angle between the incident light and the surface normal. Similar to GDAL's <code>gdaldem</code> default algorithm.</li> <li><code>combined</code>: Hillshade algorithm whose intensity scales with slope. Similar to GDAL's <code>gdaldem</code> with <code>-combined</code> option.</li> <li><code>igor</code>: Hillshade algorithm which tries to minimize effects on other map features beneath. Similar to GDAL's <code>gdaldem</code> with <code>-igor</code> option.</li> <li><code>multidirectional</code>: Hillshade with multiple illumination directions. Uses the basic hillshade model with multiple independent light sources.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 5.5.0 \u274c (#3396) \u274c (#3396)"},{"location":"layers/#color-relief","title":"Color-relief","text":""},{"location":"layers/#visibility_9","title":"visibility","text":"<p>Layout property. Optional enum. Possible values: <code>visible</code>, <code>none</code>. Defaults to <code>\"visible\"</code>.</p> <p>Whether this layer is displayed.</p> <ul> <li><code>visible</code>: The layer is shown.</li> <li><code>none</code>: The layer is not shown.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality Not supported yet Not supported yet Not supported yet"},{"location":"layers/#color-relief-opacity","title":"color-relief-opacity","text":"<p>Paint property. Optional number in range [0, 1]. Defaults to <code>1</code>. Supports interpolate expressions. Transitionable.</p> <p>The opacity at which the color-relief will be drawn.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 5.6.0 \u274c (#3408) \u274c (#3408)"},{"location":"layers/#color-relief-color","title":"color-relief-color","text":"<p>Paint property. Optional color. Supports interpolate expressions.</p> <p>Defines the color of each pixel based on its elevation. Should be an expression that uses <code>[\"elevation\"]</code> as input.</p> <pre><code>\"color-relief-color\": [\n    \"interpolate\",\n    [\"linear\"],\n    [\"elevation\"],\n    0,\n    \"black\",\n    8849,\n    \"white\"\n]\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 5.6.0 \u274c (#3408) \u274c (#3408) data-driven styling Not supported yet Not supported yet Not supported yet"},{"location":"light/","title":"Light","text":"<p>The global light source.</p> <pre><code>\"light\": {\"anchor\": \"viewport\", \"color\": \"white\", \"intensity\": 0.4}\n</code></pre>"},{"location":"light/#anchor","title":"anchor","text":"<p>Optional enum. Possible values: <code>map</code>, <code>viewport</code>. Defaults to <code>\"viewport\"</code>.</p> <p>Whether extruded geometries are lit relative to the map or viewport.</p> <ul> <li><code>map</code>: The position of the light source is aligned to the rotation of the map.</li> <li><code>viewport</code>: The position of the light source is aligned to the rotation of the viewport. <pre><code>\"anchor\": \"map\"\n</code></pre></li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.27.0 5.1.0 3.6.0"},{"location":"light/#position","title":"position","text":"<p>Optional array. Defaults to <code>[1.15,210,30]</code>. Supports interpolate expressions. Transitionable.</p> <p>Position of the light source relative to lit (extruded) geometries, in [r radial coordinate, a azimuthal angle, p polar angle] where r indicates the distance from the center of the base of an object to its light, a indicates the position of the light relative to 0\u00b0 (0\u00b0 when <code>light.anchor</code> is set to <code>viewport</code> corresponds to the top of the viewport, or 0\u00b0 when <code>light.anchor</code> is set to <code>map</code> corresponds to due north, and degrees proceed clockwise), and p indicates the height of the light (from 0\u00b0, directly above, to 180\u00b0, directly below).</p> <pre><code>\"position\": [1.5, 90, 80]\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.27.0 5.1.0 3.6.0"},{"location":"light/#color","title":"color","text":"<p>Optional color. Defaults to <code>\"#ffffff\"</code>. Supports interpolate expressions. Transitionable.</p> <p>Color tint for lighting extruded geometries.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.27.0 5.1.0 3.6.0"},{"location":"light/#intensity","title":"intensity","text":"<p>Optional number in range [0, 1]. Defaults to <code>0.5</code>. Supports interpolate expressions. Transitionable.</p> <p>Intensity of lighting (on a scale from 0 to 1). Higher numbers will present as more extreme contrast.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.27.0 5.1.0 3.6.0"},{"location":"projection/","title":"Projection","text":"<p>The projection configuration</p> <pre><code>\"projection\": {\n    \"type\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"zoom\"],\n        10,\n        \"vertical-perspective\",\n        12,\n        \"mercator\"\n    ]\n}\n</code></pre>"},{"location":"projection/#type","title":"type","text":"<p>Optional projectionDefinition. Defaults to <code>\"mercator\"</code>. Supports interpolate expressions.</p> <p>The projection definition type. Can be specified as a string, a transition state, or an expression.</p>"},{"location":"root/","title":"Root","text":"<p>Root level properties of a MapLibre style specify the map's layers, tile sources and other resources, and default values for the initial camera position when not specified elsewhere.</p> <pre><code>{\n    \"version\": 8,\n    \"name\": \"MapLibre Demo Tiles\",\n    \"sprite\": \"https://demotiles.maplibre.org/styles/osm-bright-gl-style/sprite\",\n    \"glyphs\": \"https://demotiles.maplibre.org/font/{fontstack}/{range}.pbf\",\n    \"sources\": {... },\n    \"layers\": [...]\n}\n</code></pre>"},{"location":"root/#version","title":"version","text":"<p>Required enum.</p> <p>Style specification version number. Must be 8.</p> <pre><code>\"version\": 8\n</code></pre>"},{"location":"root/#name","title":"name","text":"<p>Optional string.</p> <p>A human-readable name for the style.</p> <pre><code>\"name\": \"Bright\"\n</code></pre>"},{"location":"root/#metadata","title":"metadata","text":"<p>Optional.</p> <p>Arbitrary properties useful to track with the stylesheet, but do not influence rendering. Properties should be prefixed to avoid collisions, like 'maplibre:'.</p> <pre><code>\"metadata\": {\n    \"styleeditor:slimmode\": true,\n    \"styleeditor:comment\": \"Style generated 1677776383\",\n    \"styleeditor:version\": \"3.14.159265\",\n    \"example:object\": {\n        \"String\": \"one\",\n        \"Number\": 2,\n        \"Boolean\": false\n    }\n}\n</code></pre>"},{"location":"root/#center","title":"center","text":"<p>Optional array.</p> <p>Default map center in longitude and latitude.  The style center will be used only if the map has not been positioned by other means (e.g. map options or user interaction).</p> <pre><code>\"center\": [-73.9749, 40.7736]\n</code></pre>"},{"location":"root/#centeraltitude","title":"centerAltitude","text":"<p>Optional number.</p> <p>Default map center altitude in meters above sea level. The style center altitude defines the altitude where the camera is looking at and will be used only if the map has not been positioned by other means (e.g. map options or user interaction).</p> <pre><code>\"centerAltitude\": 123.4\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 5.0.0 \u274c (#2980) \u274c (#2980)"},{"location":"root/#zoom","title":"zoom","text":"<p>Optional number.</p> <p>Default zoom level.  The style zoom will be used only if the map has not been positioned by other means (e.g. map options or user interaction).</p> <pre><code>\"zoom\": 12.5\n</code></pre>"},{"location":"root/#bearing","title":"bearing","text":"<p>Optional number. Units in degrees. Defaults to <code>0</code>.</p> <p>Default bearing, in degrees. The bearing is the compass direction that is \"up\"; for example, a bearing of 90\u00b0 orients the map so that east is up. This value will be used only if the map has not been positioned by other means (e.g. map options or user interaction).</p> <pre><code>\"bearing\": 29\n</code></pre>"},{"location":"root/#pitch","title":"pitch","text":"<p>Optional number. Units in degrees. Defaults to <code>0</code>.</p> <p>Default pitch, in degrees. Zero is perpendicular to the surface, for a look straight down at the map, while a greater value like 60 looks ahead towards the horizon. The style pitch will be used only if the map has not been positioned by other means (e.g. map options or user interaction).</p> <pre><code>\"pitch\": 50\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS 0-60 degrees 0.8.0 1.0.0 1.0.0 0-85 degrees 2.0.0 \u274c (#1909) \u274c (#1909) 0-180 degrees 5.0.0 \u274c (#1909) \u274c (#1909)"},{"location":"root/#roll","title":"roll","text":"<p>Optional number. Units in degrees. Defaults to <code>0</code>.</p> <p>Default roll, in degrees. The roll angle is measured counterclockwise about the camera boresight. The style roll will be used only if the map has not been positioned by other means (e.g. map options or user interaction).</p> <pre><code>\"roll\": 45\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 5.0.0 \u274c (#2941) \u274c (#2941)"},{"location":"root/#state","title":"state","text":"<p>Optional state. Defaults to <code>{}</code>.</p> <p>An object used to define default values when using the <code>global-state</code> expression.</p> <pre><code>\"state\": {\n    \"chargerType\": {\"default\": [\"CCS\", \"CHAdeMO\", \"Type2\"]},\n    \"minPreferredChargingSpeed\": {\"default\": 50}\n}\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 5.6.0 \u274c (#3302) \u274c (#3302)"},{"location":"root/#light","title":"light","text":"<p>Optional light.</p> <p>The global light source.</p> <pre><code>\"light\": {\"anchor\": \"viewport\", \"color\": \"white\", \"intensity\": 0.4}\n</code></pre>"},{"location":"root/#sky","title":"sky","text":"<p>Optional sky.</p> <p>The map's sky configuration. Note: this definition is still experimental and is under development in maplibre-gl-js.</p> <pre><code>\"sky\": {\n    \"sky-color\": \"#199EF3\",\n    \"sky-horizon-blend\": 0.5,\n    \"horizon-color\": \"#ffffff\",\n    \"horizon-fog-blend\": 0.5,\n    \"fog-color\": \"#0000ff\",\n    \"fog-ground-blend\": 0.5,\n    \"atmosphere-blend\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"zoom\"],\n        0,\n        1,\n        10,\n        1,\n        12,\n        0\n    ]\n}\n</code></pre>"},{"location":"root/#projection","title":"projection","text":"<p>Optional projection.</p> <p>The projection configuration</p> <pre><code>\"projection\": {\n    \"type\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"zoom\"],\n        10,\n        \"vertical-perspective\",\n        12,\n        \"mercator\"\n    ]\n}\n</code></pre>"},{"location":"root/#terrain","title":"terrain","text":"<p>Optional terrain.</p> <p>The terrain configuration.</p> <pre><code>\"terrain\": {\"source\": \"raster-dem-source\", \"exaggeration\": 0.5}\n</code></pre>"},{"location":"root/#sources","title":"sources","text":"<p>Required sources.</p> <p>Sources state which data the map should display. Specify the type of source with the <code>type</code> property. Adding a source isn't enough to make data appear on the map because sources don't contain styling details like color or width. Layers refer to a source and give it a visual representation. This makes it possible to style the same source in different ways, like differentiating between types of roads in a highways layer.</p> <p>Tiled sources (vector and raster) must specify their details according to the TileJSON specification.</p> <pre><code>\"sources\": {\n    \"maplibre-demotiles\": {\n        \"type\": \"vector\",\n        \"url\": \"https://demotiles.maplibre.org/tiles/tiles.json\"\n    },\n    \"maplibre-tilejson\": {\n        \"type\": \"vector\",\n        \"url\": \"http://api.example.com/tilejson.json\"\n    },\n    \"maplibre-streets\": {\n        \"type\": \"vector\",\n        \"tiles\": [\n            \"http://a.example.com/tiles/{z}/{x}/{y}.pbf\",\n            \"http://b.example.com/tiles/{z}/{x}/{y}.pbf\"\n        ],\n        \"maxzoom\": 14\n    },\n    \"wms-imagery\": {\n        \"type\": \"raster\",\n        \"tiles\": [\n            \"http://a.example.com/wms?bbox={bbox-epsg-3857}&amp;format=image/png&amp;service=WMS&amp;version=1.1.1&amp;request=GetMap&amp;srs=EPSG:3857&amp;width=256&amp;height=256&amp;layers=example\"\n        ],\n        \"tileSize\": 256\n    }\n}\n</code></pre>"},{"location":"root/#sprite","title":"sprite","text":"<p>Optional sprite.</p> <p>An array of <code>{id: 'my-sprite', url: 'https://example.com/sprite'}</code> objects. Each object should represent a unique URL to load a sprite from and and a unique ID to use as a prefix when referencing images from that sprite (i.e. 'my-sprite:image'). All the URLs are internally extended to load both .json and .png files. If the <code>id</code> field is equal to 'default', the prefix is omitted (just 'image' instead of 'default:image'). All the IDs and URLs must be unique. For backwards compatibility, instead of an array, one can also provide a single string that represent a URL to load the sprite from. The images in this case won't be prefixed.</p> <pre><code>\"sprite\": \"https://demotiles.maplibre.org/styles/osm-bright-gl-style/sprite\"\n</code></pre>"},{"location":"root/#glyphs","title":"glyphs","text":"<p>Optional string.</p> <p>A URL template for loading signed-distance-field glyph sets in PBF format.</p> <p>If this property is set, any text in the <code>text-field</code> layout property is displayed in the font stack named by the <code>text-font</code> layout property based on glyphs located at the URL specified by this property. Otherwise, font faces will be determined by the <code>text-font</code> property based on the local environment.</p> <p>The URL must include:</p> <ul> <li> <p><code>{fontstack}</code> - When requesting glyphs, this token is replaced with a comma separated list of fonts from a font stack specified in the <code>text-font</code> property of a symbol layer. </p> </li> <li> <p><code>{range}</code> - When requesting glyphs, this token is replaced with a range of 256 Unicode code points. For example, to load glyphs for the Unicode Basic Latin and Basic Latin-1 Supplement blocks, the range would be 0-255. The actual ranges that are loaded are determined at runtime based on what text needs to be displayed.</p> </li> </ul> <p>The URL must be absolute, containing the scheme, authority and path components.</p> <pre><code>\"glyphs\": \"https://demotiles.maplibre.org/font/{fontstack}/{range}.pbf\"\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.0.16 0.1.1 0.1.0 omit to use local fonts \u274c (#3302) \u274c (#165) \u274c (#165)"},{"location":"root/#font-faces","title":"font-facesUnicode rangeFont ResolutionSupported Fonts","text":"<p>Optional array.</p> <p>The <code>font-faces</code> property can be used to specify what font files to use for rendering text. Font faces contain information needed to render complex texts such as Devanagari, Khmer among many others.The optional <code>unicode-range</code> property can be used to only use a particular font file for characters within the specified unicode range(s). Its value should be an array of strings, each indicating a start and end of a unicode range, similar to the CSS descriptor with the same name. This allows specifying multiple non-consecutive unicode ranges. When not specified, the default value is <code>U+0-10FFFF</code>, meaning the font file will be used for all unicode characters.</p> <p>Refer to the Unicode Character Code Charts to see ranges for scripts supported by Unicode. To see what unicode code-points are available in a font, use a tool like FontDrop.</p> <p>For every name in a symbol layer\u2019s <code>text-font</code> array, characters are matched if they are covered one of the by the font files in the corresponding entry of the <code>font-faces</code> map. Any still-unmatched characters then fall back to the <code>glyphs</code> URL if provided.</p> <p>What type of fonts are supported is implementation-defined. Unsupported fonts are ignored.</p> <pre><code>\"font-faces\": {\n    \"Noto Sans Regular\": [\n        {\n            \"url\": \"https://cdn.jsdelivr.net/gh/notofonts/notofonts.github.io/fonts/NotoSansKhmer/hinted/ttf/NotoSansKhmer-Regular.ttf\",\n            \"unicode-range\": [\"U+1780-17FF\"]\n        },\n        {\n            \"url\": \"https://cdn.jsdelivr.net/gh/notofonts/notofonts.github.io/fonts/NotoSansDevanagari/hinted/ttf/NotoSansDevanagari-Regular.ttf\",\n            \"unicode-range\": [\"U+0900-097F\"]\n        },\n        {\n            \"url\": \"https://cdn.jsdelivr.net/gh/notofonts/notofonts.github.io/fonts/NotoSansMyanmar/hinted/ttf/NotoSansMyanmar-Regular.ttf\",\n            \"unicode-range\": [\"U+1000-109F\"]\n        },\n        {\n            \"url\": \"https://cdn.jsdelivr.net/gh/notofonts/notofonts.github.io/fonts/NotoSansEthiopic/hinted/ttf/NotoSansEthiopic-Regular.ttf\",\n            \"unicode-range\": [\"U+1200-137F\"]\n        }\n    ],\n    \"Unifont\": \"https://ftp.gnu.org/gnu/unifont/unifont-15.0.01/unifont-15.0.01.ttf\"\n}\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality \u274c (#50) 11.13.0 6.18.0"},{"location":"root/#transition","title":"transition","text":"<p>Optional transition.</p> <p>A global transition definition to use as a default across properties, to be used for timing transitions between one value and the next when no property-specific transition is set. Collision-based symbol fading is controlled independently of the style's <code>transition</code> property.</p> <pre><code>\"transition\": {\"duration\": 300, \"delay\": 0}\n</code></pre>"},{"location":"root/#layers","title":"layers","text":"<p>Required array.</p> <p>A style's <code>layers</code> property lists all the layers available in that style. The type of layer is specified by the <code>type</code> property, and must be one of <code>background</code>, <code>fill</code>, <code>line</code>, <code>symbol</code>, <code>raster</code>, <code>circle</code>, <code>fill-extrusion</code>, <code>heatmap</code>, <code>hillshade</code>, <code>color-relief</code>.</p> <p>Except for layers of the <code>background</code> type, each layer needs to refer to a source. Layers take the data that they get from a source, optionally filter features, and then define how those features are styled.</p> <pre><code>\"layers\": [\n    {\n        \"id\": \"coastline\",\n        \"source\": \"maplibre\",\n        \"source-layer\": \"countries\",\n        \"type\": \"line\",\n        \"paint\": {\"line-color\": \"#198EC8\"}\n    }\n]\n</code></pre>"},{"location":"sky/","title":"Sky","text":"<p>The map's sky configuration. Note: this definition is still experimental and is under development in maplibre-gl-js.</p> <pre><code>\"sky\": {\n    \"sky-color\": \"#199EF3\",\n    \"sky-horizon-blend\": 0.5,\n    \"horizon-color\": \"#ffffff\",\n    \"horizon-fog-blend\": 0.5,\n    \"fog-color\": \"#0000ff\",\n    \"fog-ground-blend\": 0.5,\n    \"atmosphere-blend\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"zoom\"],\n        0,\n        1,\n        10,\n        1,\n        12,\n        0\n    ]\n}\n</code></pre>"},{"location":"sky/#sky-color","title":"sky-color","text":"<p>Optional color. Defaults to <code>\"#88C6FC\"</code>. Supports interpolate expressions. Transitionable.</p> <p>The base color for the sky.</p>"},{"location":"sky/#horizon-color","title":"horizon-color","text":"<p>Optional color. Defaults to <code>\"#ffffff\"</code>. Supports interpolate expressions. Transitionable.</p> <p>The base color at the horizon.</p>"},{"location":"sky/#fog-color","title":"fog-color","text":"<p>Optional color. Defaults to <code>\"#ffffff\"</code>. Supports interpolate expressions. Transitionable.</p> <p>The base color for the fog. Requires 3D terrain.</p>"},{"location":"sky/#fog-ground-blend","title":"fog-ground-blend","text":"<p>Optional number in range [0, 1]. Defaults to <code>0.5</code>. Supports interpolate expressions. Transitionable.</p> <p>How to blend the fog over the 3D terrain. Where 0 is the map center and 1 is the horizon.</p>"},{"location":"sky/#horizon-fog-blend","title":"horizon-fog-blend","text":"<p>Optional number in range [0, 1]. Defaults to <code>0.8</code>. Supports interpolate expressions. Transitionable.</p> <p>How to blend the fog color and the horizon color. Where 0 is using the horizon color only and 1 is using the fog color only.</p>"},{"location":"sky/#sky-horizon-blend","title":"sky-horizon-blend","text":"<p>Optional number in range [0, 1]. Defaults to <code>0.8</code>. Supports interpolate expressions. Transitionable.</p> <p>How to blend the sky color and the horizon color. Where 1 is blending the color at the middle of the sky and 0 is not blending at all and using the sky color only.</p>"},{"location":"sky/#atmosphere-blend","title":"atmosphere-blend","text":"<p>Optional number in range [0, 1]. Defaults to <code>0.8</code>. Supports interpolate expressions. Transitionable.</p> <p>How to blend the atmosphere. Where 1 is visible atmosphere and 0 is hidden. It is best to interpolate this expression when using globe projection.</p>"},{"location":"sources/","title":"Sources","text":"<p>Sources state which data the map should display. Specify the type of source with the <code>type</code> property. Adding a source isn't enough to make data appear on the map because sources don't contain styling details like color or width. Layers refer to a source and give it a visual representation. This makes it possible to style the same source in different ways, like differentiating between types of roads in a highways layer.</p> <p>Tiled sources (vector and raster) must specify their details according to the TileJSON specification.</p> <pre><code>\"sources\": {\n    \"maplibre-demotiles\": {\n        \"type\": \"vector\",\n        \"url\": \"https://demotiles.maplibre.org/tiles/tiles.json\"\n    },\n    \"maplibre-tilejson\": {\n        \"type\": \"vector\",\n        \"url\": \"http://api.example.com/tilejson.json\"\n    },\n    \"maplibre-streets\": {\n        \"type\": \"vector\",\n        \"tiles\": [\n            \"http://a.example.com/tiles/{z}/{x}/{y}.pbf\",\n            \"http://b.example.com/tiles/{z}/{x}/{y}.pbf\"\n        ],\n        \"maxzoom\": 14\n    },\n    \"wms-imagery\": {\n        \"type\": \"raster\",\n        \"tiles\": [\n            \"http://a.example.com/wms?bbox={bbox-epsg-3857}&amp;format=image/png&amp;service=WMS&amp;version=1.1.1&amp;request=GetMap&amp;srs=EPSG:3857&amp;width=256&amp;height=256&amp;layers=example\"\n        ],\n        \"tileSize\": 256\n    }\n}\n</code></pre>"},{"location":"sources/#vector","title":"vector","text":"<p>A vector tile source. Tiles must be in Mapbox Vector Tile format. All geometric coordinates in vector tiles must be between <code>-1 * extent</code> and <code>(extent * 2) - 1</code> inclusive. All layers that use a vector source must specify a <code>source-layer</code> value. Note that features are only rendered within their originating tile, which may lead to visual artifacts when large values for width, radius, size or offset are specified. To mitigate rendering issues, either reduce the value of the property causing the artifact or, if you have control over the tile generation process, increase the buffer size to ensure that features are fully rendered within the tile.</p> <pre><code>\"sources\": {\n    \"maplibre-streets\": {\n        \"type\": \"vector\",\n        \"tiles\": [\n            \"http://a.example.com/tiles/{z}/{x}/{y}.pbf\"\n        ]\n    }\n}\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"sources/#type","title":"type","text":"<p>Required enum. Possible values: <code>vector</code>.</p> <p>The type of the source.</p> <ul> <li><code>vector</code>: A vector tile source.</li> </ul>"},{"location":"sources/#url","title":"url","text":"<p>Optional string.</p> <p>A URL to a TileJSON resource. Supported protocols are <code>http:</code> and <code>https:</code>.</p>"},{"location":"sources/#tiles","title":"tiles","text":"<p>Optional array.</p> <p>An array of one or more tile source URLs, as in the TileJSON spec.</p>"},{"location":"sources/#bounds","title":"bounds","text":"<p>Optional array. Defaults to <code>[-180,-85.051129,180,85.051129]</code>.</p> <p>An array containing the longitude and latitude of the southwest and northeast corners of the source's bounding box in the following order: <code>[sw.lng, sw.lat, ne.lng, ne.lat]</code>. When this property is included in a source, no tiles outside of the given bounds are requested by MapLibre.</p>"},{"location":"sources/#scheme","title":"scheme","text":"<p>Optional enum. Possible values: <code>xyz</code>, <code>tms</code>. Defaults to <code>\"xyz\"</code>.</p> <p>Influences the y direction of the tile coordinates. The global-mercator (aka Spherical Mercator) profile is assumed.</p> <ul> <li><code>xyz</code>: Slippy map tilenames scheme.</li> <li><code>tms</code>: OSGeo spec scheme.</li> </ul>"},{"location":"sources/#minzoom","title":"minzoom","text":"<p>Optional number. Defaults to <code>0</code>.</p> <p>Minimum zoom level for which tiles are available, as in the TileJSON spec.</p>"},{"location":"sources/#maxzoom","title":"maxzoom","text":"<p>Optional number. Defaults to <code>22</code>.</p> <p>Maximum zoom level for which tiles are available, as in the TileJSON spec. Data from tiles at the maxzoom are used when displaying the map at higher zoom levels.</p>"},{"location":"sources/#attribution","title":"attribution","text":"<p>Optional string.</p> <p>Contains an attribution to be displayed when the map is shown to a user.</p>"},{"location":"sources/#promoteid","title":"promoteId","text":"<p>Optional promoteId.</p> <p>A property to use as a feature id (for feature state). Either a property name, or an object of the form <code>{&lt;sourceLayer&gt;: &lt;propertyName&gt;}</code>. If specified as a string for a vector tile source, the same property is used across all its source layers.</p>"},{"location":"sources/#volatile","title":"volatile","text":"<p>Optional boolean. Defaults to <code>false</code>.</p> <p>A setting to determine whether a source's tiles are cached locally.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality Not planned 9.3.0 5.10.0"},{"location":"sources/#raster","title":"raster","text":"<p>A raster tile source.</p> <pre><code>\"sources\": {\n    \"maplibre-satellite\": {\n        \"type\": \"raster\",\n        \"tiles\": [\n            \"http://a.example.com/tiles/{z}/{x}/{y}.png\"\n        ],\n        \"tileSize\": 256\n    }\n}\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0"},{"location":"sources/#type_1","title":"type","text":"<p>Required enum. Possible values: <code>raster</code>.</p> <p>The type of the source.</p> <ul> <li><code>raster</code>: A raster tile source.</li> </ul>"},{"location":"sources/#url_1","title":"url","text":"<p>Optional string.</p> <p>A URL to a TileJSON resource. Supported protocols are <code>http:</code> and <code>https:</code>.</p>"},{"location":"sources/#tiles_1","title":"tiles","text":"<p>Optional array.</p> <p>An array of one or more tile source URLs, as in the TileJSON spec.</p>"},{"location":"sources/#bounds_1","title":"bounds","text":"<p>Optional array. Defaults to <code>[-180,-85.051129,180,85.051129]</code>.</p> <p>An array containing the longitude and latitude of the southwest and northeast corners of the source's bounding box in the following order: <code>[sw.lng, sw.lat, ne.lng, ne.lat]</code>. When this property is included in a source, no tiles outside of the given bounds are requested by MapLibre.</p>"},{"location":"sources/#minzoom_1","title":"minzoom","text":"<p>Optional number. Defaults to <code>0</code>.</p> <p>Minimum zoom level for which tiles are available, as in the TileJSON spec.</p>"},{"location":"sources/#maxzoom_1","title":"maxzoom","text":"<p>Optional number. Defaults to <code>22</code>.</p> <p>Maximum zoom level for which tiles are available, as in the TileJSON spec. Data from tiles at the maxzoom are used when displaying the map at higher zoom levels.</p>"},{"location":"sources/#tilesize","title":"tileSize","text":"<p>Optional number. Units in pixels. Defaults to <code>512</code>.</p> <p>The minimum visual size to display tiles for this layer. Only configurable for raster layers.</p>"},{"location":"sources/#scheme_1","title":"scheme","text":"<p>Optional enum. Possible values: <code>xyz</code>, <code>tms</code>. Defaults to <code>\"xyz\"</code>.</p> <p>Influences the y direction of the tile coordinates. The global-mercator (aka Spherical Mercator) profile is assumed.</p> <ul> <li><code>xyz</code>: Slippy map tilenames scheme.</li> <li><code>tms</code>: OSGeo spec scheme.</li> </ul>"},{"location":"sources/#attribution_1","title":"attribution","text":"<p>Optional string.</p> <p>Contains an attribution to be displayed when the map is shown to a user.</p>"},{"location":"sources/#volatile_1","title":"volatile","text":"<p>Optional boolean. Defaults to <code>false</code>.</p> <p>A setting to determine whether a source's tiles are cached locally.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality Not planned 9.3.0 5.10.0"},{"location":"sources/#raster-dem","title":"raster-dem","text":"<p>A raster DEM source. Only supports Mapbox Terrain RGB and Mapzen Terrarium tiles.</p> <pre><code>\"sources\": {\n    \"maplibre-terrain-rgb\": {\n        \"type\": \"raster-dem\",\n        \"encoding\": \"mapbox\",\n        \"tiles\": [\n            \"http://a.example.com/dem-tiles/{z}/{x}/{y}.png\"\n        ]\n    }\n}\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.43.0 6.0.0 4.0.0"},{"location":"sources/#type_2","title":"type","text":"<p>Required enum. Possible values: <code>raster-dem</code>.</p> <p>The type of the source.</p> <ul> <li><code>raster-dem</code>: A RGB-encoded raster DEM source</li> </ul>"},{"location":"sources/#url_2","title":"url","text":"<p>Optional string.</p> <p>A URL to a TileJSON resource. Supported protocols are <code>http:</code> and <code>https:</code>.</p>"},{"location":"sources/#tiles_2","title":"tiles","text":"<p>Optional array.</p> <p>An array of one or more tile source URLs, as in the TileJSON spec.</p>"},{"location":"sources/#bounds_2","title":"bounds","text":"<p>Optional array. Defaults to <code>[-180,-85.051129,180,85.051129]</code>.</p> <p>An array containing the longitude and latitude of the southwest and northeast corners of the source's bounding box in the following order: <code>[sw.lng, sw.lat, ne.lng, ne.lat]</code>. When this property is included in a source, no tiles outside of the given bounds are requested by MapLibre.</p>"},{"location":"sources/#minzoom_2","title":"minzoom","text":"<p>Optional number. Defaults to <code>0</code>.</p> <p>Minimum zoom level for which tiles are available, as in the TileJSON spec.</p>"},{"location":"sources/#maxzoom_2","title":"maxzoom","text":"<p>Optional number. Defaults to <code>22</code>.</p> <p>Maximum zoom level for which tiles are available, as in the TileJSON spec. Data from tiles at the maxzoom are used when displaying the map at higher zoom levels.</p>"},{"location":"sources/#tilesize_1","title":"tileSize","text":"<p>Optional number. Units in pixels. Defaults to <code>512</code>.</p> <p>The minimum visual size to display tiles for this layer. Only configurable for raster layers.</p>"},{"location":"sources/#attribution_2","title":"attribution","text":"<p>Optional string.</p> <p>Contains an attribution to be displayed when the map is shown to a user.</p>"},{"location":"sources/#encoding","title":"encoding","text":"<p>Optional enum. Possible values: <code>terrarium</code>, <code>mapbox</code>, <code>custom</code>. Defaults to <code>\"mapbox\"</code>.</p> <p>The encoding used by this source. Mapbox Terrain RGB is used by default.</p> <ul> <li><code>terrarium</code>: Terrarium format PNG tiles. See https://aws.amazon.com/es/public-datasets/terrain/ for more info.</li> <li><code>mapbox</code>: Mapbox Terrain RGB tiles. See https://www.mapbox.com/help/access-elevation-data/#mapbox-terrain-rgb for more info.</li> <li><code>custom</code>: Decodes tiles using the redFactor, blueFactor, greenFactor, baseShift parameters.</li> </ul> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS mapbox, terrarium 0.43.0 6.0.0 6.0.0 custom 3.4.0 \u274c (#2783) \u274c (#2783)"},{"location":"sources/#redfactor","title":"redFactor","text":"<p>Optional number. Defaults to <code>1</code>.</p> <p>Value that will be multiplied by the red channel value when decoding. Only used on custom encodings.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 3.4.0 \u274c (#2783) \u274c (#2783)"},{"location":"sources/#bluefactor","title":"blueFactor","text":"<p>Optional number. Defaults to <code>1</code>.</p> <p>Value that will be multiplied by the blue channel value when decoding. Only used on custom encodings.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 3.4.0 \u274c (#2783) \u274c (#2783)"},{"location":"sources/#greenfactor","title":"greenFactor","text":"<p>Optional number. Defaults to <code>1</code>.</p> <p>Value that will be multiplied by the green channel value when decoding. Only used on custom encodings.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 3.4.0 \u274c (#2783) \u274c (#2358)"},{"location":"sources/#baseshift","title":"baseShift","text":"<p>Optional number. Defaults to <code>0</code>.</p> <p>Value that will be added to the encoding mix when decoding. Only used on custom encodings.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 3.4.0 \u274c (#2783) \u274c (#2783)"},{"location":"sources/#volatile_2","title":"volatile","text":"<p>Optional boolean. Defaults to <code>false</code>.</p> <p>A setting to determine whether a source's tiles are cached locally.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality Not planned 9.3.0 5.10.0"},{"location":"sources/#geojson","title":"geojson","text":"<p>A GeoJSON source. Data must be provided via a <code>\"data\"</code> property, whose value can be a URL or inline GeoJSON. When using in a browser, the GeoJSON data must be on the same domain as the map or served with CORS headers.</p> <pre><code>\"sources\": {\n    \"geojson-marker\": {\n        \"type\": \"geojson\",\n        \"data\": {\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [12.550343, 55.665957]\n            },\n            \"properties\": {\n                \"title\": \"Somewhere\",\n                \"marker-symbol\": \"monument\"\n            }\n        }\n    },\n    \"geojson-lines\": {\n        \"type\": \"geojson\",\n        \"data\": \"./lines.geojson\"\n    }\n}\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 2.0.1 2.0.0 clustering 0.14.0 4.2.0 3.4.0 line distance metrics 0.45.0 6.5.0 4.4.0"},{"location":"sources/#type_3","title":"type","text":"<p>Required enum. Possible values: <code>geojson</code>.</p> <p>The data type of the GeoJSON source.</p> <ul> <li><code>geojson</code>: A GeoJSON data source.</li> </ul>"},{"location":"sources/#data","title":"data","text":"<p>Required.</p> <p>A URL to a GeoJSON file, or inline GeoJSON.</p>"},{"location":"sources/#maxzoom_3","title":"maxzoom","text":"<p>Optional number. Defaults to <code>18</code>.</p> <p>Maximum zoom level at which to create vector tiles (higher means greater detail at high zoom levels).</p>"},{"location":"sources/#attribution_3","title":"attribution","text":"<p>Optional string.</p> <p>Contains an attribution to be displayed when the map is shown to a user.</p>"},{"location":"sources/#buffer","title":"buffer","text":"<p>Optional number in range [0, 512]. Defaults to <code>128</code>.</p> <p>Size of the tile buffer on each side. A value of 0 produces no buffer. A value of 512 produces a buffer as wide as the tile itself. Larger values produce fewer rendering artifacts near tile edges and slower performance.</p>"},{"location":"sources/#filter","title":"filter","text":"<p>Optional.</p> <p>An expression for filtering features prior to processing them for rendering.</p>"},{"location":"sources/#tolerance","title":"tolerance","text":"<p>Optional number. Defaults to <code>0.375</code>.</p> <p>Douglas-Peucker simplification tolerance (higher means simpler geometries and faster performance).</p>"},{"location":"sources/#cluster","title":"cluster","text":"<p>Optional boolean. Defaults to <code>false</code>.</p> <p>If the data is a collection of point features, setting this to true clusters the points by radius into groups. Cluster groups become new <code>Point</code> features in the source with additional properties:</p> <ul> <li> <p><code>cluster</code> Is <code>true</code> if the point is a cluster </p> </li> <li> <p><code>cluster_id</code> A unique id for the cluster to be used in conjunction with the cluster inspection methods</p> </li> <li> <p><code>point_count</code> Number of original points grouped into this cluster</p> </li> <li> <p><code>point_count_abbreviated</code> An abbreviated point count</p> </li> </ul>"},{"location":"sources/#clusterradius","title":"clusterRadius","text":"<p>Optional number in range [0, \u221e). Defaults to <code>50</code>.</p> <p>Radius of each cluster if clustering is enabled. A value of 512 indicates a radius equal to the width of a tile.</p>"},{"location":"sources/#clustermaxzoom","title":"clusterMaxZoom","text":"<p>Optional number.</p> <p>Max zoom on which to cluster points if clustering is enabled. Defaults to one zoom less than maxzoom (so that last zoom features are not clustered). Clusters are re-evaluated at integer zoom levels so setting clusterMaxZoom to 14 means the clusters will be displayed until z15.</p>"},{"location":"sources/#clusterminpoints","title":"clusterMinPoints","text":"<p>Optional number.</p> <p>Minimum number of points necessary to form a cluster if clustering is enabled. Defaults to <code>2</code>.</p>"},{"location":"sources/#clusterproperties","title":"clusterProperties","text":"<p>Optional.</p> <p>An object defining custom properties on the generated clusters if clustering is enabled, aggregating values from clustered points. Has the form <code>{\"property_name\": [operator, map_expression]}</code>. <code>operator</code> is any expression function that accepts at least 2 operands (e.g. <code>\"+\"</code> or <code>\"max\"</code>) \u2014 it accumulates the property value from clusters/points the cluster contains; <code>map_expression</code> produces the value of a single point.</p> <p>Example: <code>{\"sum\": [\"+\", [\"get\", \"scalerank\"]]}</code>.</p> <p>For more advanced use cases, in place of <code>operator</code>, you can use a custom reduce expression that references a special <code>[\"accumulated\"]</code> value, e.g.:</p> <p><code>{\"sum\": [[\"+\", [\"accumulated\"], [\"get\", \"sum\"]], [\"get\", \"scalerank\"]]}</code></p>"},{"location":"sources/#linemetrics","title":"lineMetrics","text":"<p>Optional boolean. Defaults to <code>false</code>.</p> <p>Whether to calculate line distance metrics. This is required for line layers that specify <code>line-gradient</code> values.</p>"},{"location":"sources/#generateid","title":"generateId","text":"<p>Optional boolean. Defaults to <code>false</code>.</p> <p>Whether to generate ids for the geojson features. When enabled, the <code>feature.id</code> property will be auto assigned based on its index in the <code>features</code> array, over-writing any previous values.</p>"},{"location":"sources/#promoteid_1","title":"promoteId","text":"<p>Optional promoteId.</p> <p>A property to use as a feature id (for feature state). Either a property name, or an object of the form <code>{&lt;sourceLayer&gt;: &lt;propertyName&gt;}</code>.</p>"},{"location":"sources/#video","title":"video","text":"<p>A video source. The <code>urls</code> value is an array. For each URL in the array, a video element source will be created. To support the video across browsers, supply URLs in multiple formats.</p> <p>The <code>coordinates</code> array contains <code>[longitude, latitude]</code> pairs for the video corners listed in clockwise order: top left, top right, bottom right, bottom left.</p> <p>When rendered as a raster layer, the layer's <code>raster-fade-duration</code> property will cause the video to fade in. This happens when playback is started, paused and resumed, or when the video's coordinates are updated. To avoid this behavior, set the layer's <code>raster-fade-duration</code> property to <code>0</code>.</p> <pre><code>\"sources\": {\n    \"video\": {\n        \"type\": \"video\",\n        \"urls\": [\n            \"https://static-assets.mapbox.com/mapbox-gl-js/drone.mp4\",\n            \"https://static-assets.mapbox.com/mapbox-gl-js/drone.webm\"\n        ],\n        \"coordinates\": [\n            [-122.51596391201019, 37.56238816766053],\n            [-122.51467645168304, 37.56410183312965],\n            [-122.51309394836426, 37.563391708549425],\n            [-122.51423120498657, 37.56161849366671]\n        ]\n    }\n}\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 Not supported yet Not supported yet"},{"location":"sources/#type_4","title":"type","text":"<p>Required enum. Possible values: <code>video</code>.</p> <p>The data type of the video source.</p> <ul> <li><code>video</code>: A video data source.</li> </ul>"},{"location":"sources/#urls","title":"urls","text":"<p>Required array.</p> <p>URLs to video content in order of preferred format.</p>"},{"location":"sources/#coordinates","title":"coordinates","text":"<p>Required array.</p> <p>Corners of video specified in longitude, latitude pairs.</p>"},{"location":"sources/#image","title":"image","text":"<p>An image source. The <code>url</code> value contains the image location. The <code>coordinates</code> array contains <code>[longitude, latitude]</code> pairs for the image corners listed in clockwise order: top left, top right, bottom right, bottom left.</p> <pre><code>\"sources\": {\n    \"image\": {\n        \"type\": \"image\",\n        \"url\": \"https://maplibre.org/maplibre-gl-js/docs/assets/radar.gif\",\n        \"coordinates\": [\n            [-80.425, 46.437],\n            [-71.516, 46.437],\n            [-71.516, 37.936],\n            [-80.425, 37.936]\n        ]\n    }\n}\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 0.10.0 5.2.0 3.7.0"},{"location":"sources/#type_5","title":"type","text":"<p>Required enum. Possible values: <code>image</code>.</p> <p>The data type of the image source.</p> <ul> <li><code>image</code>: An image data source.</li> </ul>"},{"location":"sources/#url_3","title":"url","text":"<p>Required string.</p> <p>URL that points to an image.</p>"},{"location":"sources/#coordinates_1","title":"coordinates","text":"<p>Required array.</p> <p>Corners of image specified in longitude, latitude pairs.</p>"},{"location":"sprite/","title":"Sprite","text":"<p>Loading a sprite can be done using the optional <code>sprite</code> property at the root level of a MapLibre style sheet.</p> <p>The images contained in the sprite can be referenced in other style properties (<code>background-pattern</code>, <code>fill-pattern</code>, <code>line-pattern</code>,<code>fill-extrusion-pattern</code> and <code>icon-image</code>).</p>"},{"location":"sprite/#usage","title":"Usage","text":"<p>You need to pass an URL where the sprite can be loaded from. </p> <pre><code>\"sprite\": \"https://demotiles.maplibre.org/styles/osm-bright-gl-style/sprite\"\n</code></pre> <p>This will load both an image by appending <code>.png</code> and the metadata about the sprite needed for loading by appending <code>.json</code>. See for yourself:</p> <ul> <li>https://demotiles.maplibre.org/styles/osm-bright-gl-style/sprite.png</li> <li>https://demotiles.maplibre.org/styles/osm-bright-gl-style/sprite.json</li> </ul> <p>More details about the exact requirements on the format of these files is provided in the next section.</p> <p>When a sprite is provided, you can refer to the images in the sprite in other parts of the style sheet. For example, when creating a symbol layer with the layout property <code>\"icon-image\": \"poi\"</code>. Or with the tokenized value  <code>\"icon-image\": \"{icon}\"</code> and vector tile features with an <code>icon</code> property with the value <code>poi</code>.</p>"},{"location":"sprite/#multiple-sprite-sources","title":"Multiple Sprite Sources","text":"<p>You can also supply an array of <code>{ id: ..., url: ... }</code> pairs to load multiple sprites:</p> <pre><code>\"sprite\": [\n    {\n        \"id\": \"roadsigns\",\n        \"url\": \"https://example.com/myroadsigns\"\n    },\n    {\n        \"id\": \"shops\",\n        \"url\": \"https://example2.com/someurl\"\n    },\n    {\n        \"id\": \"default\",\n        \"url\": \"https://example2.com/anotherurl\"\n    }\n]\n</code></pre> <p>As you can see, each sprite has an id. All images contained within a sprite also have an id. When using multiple sprites, you need to prefix the id of the image with the id of the sprite it is contained within, followed by a colon. For example, to reference the <code>stop_sign</code> image on the <code>roadsigns</code> sprite, you would need to use <code>roadsigns:stop_sign</code>.</p> <p>The sprite with id <code>default</code> is special in that you do not need to prefix the images contained within it. For example, to reference the image with id <code>airport</code> in the default sprite above, you can simply use <code>airport</code>.</p>"},{"location":"sprite/#sprite-source-format","title":"Sprite Source Format","text":"<p>A valid sprite source must supply two types of files:</p> <ul> <li> <p>An image file, which is a PNG image containing the sprite data.</p> </li> <li> <p>An index file, which is a JSON document containing a description of each image contained in the sprite. The content of this file must be a JSON object whose keys form identifiers to be used as the values of the above style properties, and whose values are objects describing the dimensions (<code>width</code> and <code>height</code> properties) and pixel ratio (<code>pixelRatio</code>) of the image and its location within the sprite (<code>x</code> and <code>y</code>). For example, a sprite containing a single image might have the following index file contents:</p> </li> </ul> <pre><code>{\n    \"poi\": {\n        \"width\": 32,\n        \"height\": 32,\n        \"x\": 0,\n        \"y\": 0,\n        \"pixelRatio\": 1\n    }\n}\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality \u2705 \u2705 \u2705 <code>textFitWidth</code>, <code>textFitHeight</code> 4.2.0 11.4.0 6.6.0"},{"location":"sprite/#optional-properties","title":"Optional Properties","text":"<p>Apart from these required properties, the following optional properties are supported:</p> <ul> <li><code>content</code>: An array of four numbers, with the first two specifying the left, top corner, and the last two specifying the right, bottom corner. If present, and if the icon uses <code>icon-text-fit</code>, the symbol's text will be fit inside the content box.</li> <li><code>stretchX</code>: An array of two-element arrays, consisting of two numbers that represent the from position and the to position of areas that can be stretched.</li> <li><code>stretchY</code>: Same as <code>stretchX</code>, but for the vertical dimension.</li> <li><code>sdf</code>: Boolean. If <code>true</code> then the image is handled as a signed-distance field (SDF) and its color can be set at runtime using the <code>icon-color</code> and <code>icon-halo-color</code> properties. Defaults to <code>false</code>.</li> <li><code>textFitWidth</code>: TextFit enum of the value stretchOrShrink (or undefined), stretchOnly, proportional describing the behavior, horizontally, when scaling a sprite due to 'icon-text-fit': 'both'.</li> <li><code>textFitHeight</code>: Same as <code>textFitWidth</code> except vertically.</li> </ul>"},{"location":"sprite/#stretch-properties","title":"Stretch Properties","text":"<p>The following image gives a bit more infomation regarding the stretch properties:</p> <p><pre><code>{\n    \"shield\": {\n        \"width\": 25,\n        \"height\": 30,\n        \"x\": 0,\n        \"y\": 0,\n        \"stretchX\": [[5, 10], [15, 20]]\n        \"stretchY\": [[5, 20]]\n        \"pixelRatio\": 1\n    }\n}\n</code></pre> The red highlighted part is where the stretch will occur over the Y axis and the blue highlight is for the X axis. </p>"},{"location":"sprite/#text-fit-properties","title":"Text Fit Properties","text":"<p>The properties <code>textFitWidth</code> and <code>textFitHeight</code> alter how a sprite's content rectangle maps to its contents when scaling a sprite.  These properties are defined with the enum TextFit which may have the following values: * <code>stretchOrShrink</code> (or omitted) * <code>stretchOnly</code>  * <code>proportional</code></p> <p>The primary use cases of interest are: 1. Both properties are undefined or stretchOrShrink</p> <p>The content rectangle scales precisely to contain its contents.</p> <ol> <li>textFitWidth = stretchOnly and textFitHeight = proportional</li> </ol> <p>The content rectangle scales to precisely contain the height of its contents but the width will not shrink smaller than the aspect ratio of the original content rectangle. This is primarily useful for shields that shouldn't become too narrow if their contents are narrow (like the number \"1\").</p> <ol> <li>textFitWidth = proportional and textFitHeight = stretchOnly</li> </ol> <p>The content rectangle scales to precisely contain the width of its contents but the height will not shrink smaller than the aspect ratio of the original content rectangle. This may be useful scenarios like no. 2 except with vertically written scripts (using <code>\"text-writing-mode\": [\"vertical\"]</code>).</p> <p></p>"},{"location":"sprite/#high-dpi-devices","title":"High-DPI Devices","text":"<p>On high-DPI devices, <code>@2x</code> is appended to  the URLs described above. For example, if you specified <code>\"sprite\": \"https://example.com/sprite\"</code>, renderers would load <code>https://example.com/sprite.json</code> and <code>https://example.com/sprite.png</code>, or <code>https://example.com/sprite@2x.json</code> and <code>https://example.com/sprite@2x.png</code>.</p>"},{"location":"sprite/#generating-sprites","title":"Generating Sprites","text":"<p>There are tools that can generate sprites from SVG files, such as spreet and spritezero.</p>"},{"location":"state/","title":"State","text":"<p>An object used to define default values when using the <code>global-state</code> expression.</p> <pre><code>\"state\": {\n    \"chargerType\": {\"default\": [\"CCS\", \"CHAdeMO\", \"Type2\"]},\n    \"minPreferredChargingSpeed\": {\"default\": 50}\n}\n</code></pre> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 5.6.0 \u274c (#3302) \u274c (#3302)"},{"location":"terrain/","title":"Terrain","text":"<p>The terrain configuration.</p> <pre><code>\"terrain\": {\"source\": \"raster-dem-source\", \"exaggeration\": 0.5}\n</code></pre>"},{"location":"terrain/#source","title":"source","text":"<p>Required string.</p> <p>The source for the terrain data.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 2.2.0 \u274c (#252) \u274c (#252)"},{"location":"terrain/#exaggeration","title":"exaggeration","text":"<p>Optional number in range [0, \u221e). Defaults to <code>1</code>.</p> <p>The exaggeration of the terrain - how high it will look.</p> SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS basic functionality 2.2.0 \u274c (#252) \u274c (#252)"},{"location":"transition/","title":"Transition","text":"<p>A global transition definition to use as a default across properties, to be used for timing transitions between one value and the next when no property-specific transition is set. Collision-based symbol fading is controlled independently of the style's <code>transition</code> property.</p> <pre><code>\"transition\": {\"duration\": 300, \"delay\": 0}\n</code></pre>"},{"location":"transition/#duration","title":"duration","text":"<p>Optional number in range [0, \u221e). Units in milliseconds. Defaults to <code>300</code>.</p> <p>Time allotted for transitions to complete.</p>"},{"location":"transition/#delay","title":"delay","text":"<p>Optional number in range [0, \u221e). Units in milliseconds. Defaults to <code>0</code>.</p> <p>Length of time before a transition begins.</p>"},{"location":"types/","title":"Types","text":"<p>MapLibre style contains values of various types, most commonly as values for the style properties of a layer.</p>"},{"location":"types/#color","title":"Color","text":"<p>The <code>color</code> type is a color in the sRGB color space. Colors are JSON strings in a variety of permitted formats: HTML-style hex values, RGB, RGBA, HSL, and HSLA. Predefined HTML colors names, like <code>yellow</code> and <code>blue</code>, are also permitted.</p> <pre><code>{\n    \"line-color\": \"#ff0\",\n    \"line-color\": \"#ffff00\",\n    \"line-color\": \"rgb(255, 255, 0)\",\n    \"line-color\": \"rgba(255, 255, 0, 1)\",\n    \"line-color\": \"hsl(100, 50%, 50%)\",\n    \"line-color\": \"hsla(100, 50%, 50%, 1)\",\n    \"line-color\": \"yellow\"\n}\n</code></pre>"},{"location":"types/#formatted","title":"Formatted","text":"<p>The <code>formatted</code> type is a string broken into sections annotated with separate formatting options.</p> <pre><code>{\n    \"text-field\": [\"format\",\n        \"foo\", { \"font-scale\": 1.2 },\n        \"bar\", { \"font-scale\": 0.8 }\n    ]\n}\n</code></pre>"},{"location":"types/#resolvedimage","title":"ResolvedImage","text":"<p>The <code>resolvedImage</code> type is an image (e.g., an icon or pattern) which is used in a layer. An input to the <code>image</code> expression operator is checked against the current map style to see if it is available to be rendered or not, and the result is returned in the <code>resolvedImage</code> type. This approach allows developers to define a series of images which the map can fall back to if previous images are not found, which cannot be achieved by providing, for example, <code>icon-image</code> with a plain string (because multiple strings cannot be supplied to <code>icon-image</code> and multiple images cannot be defined in a string).</p> <pre><code>{\n    \"icon-image\": [\"coalesce\", [\"image\", \"myImage\"], [\"image\", \"fallbackImage\"]]\n}\n</code></pre>"},{"location":"types/#string","title":"String","text":"<p>A string is text. In MapLibre styles, strings are in quotes.</p> <pre><code>{\n    \"source\": \"mySource\"\n}\n</code></pre>"},{"location":"types/#boolean","title":"Boolean","text":"<p>Boolean means yes or no, so it accepts the values <code>true</code> or <code>false</code>.</p> <pre><code>{\n    \"fill-enabled\": true\n}\n</code></pre>"},{"location":"types/#number","title":"Number","text":"<p>A number value, often an integer or floating point (decimal number). Written without quotes.</p> <pre><code>{\n    \"text-size\": 24\n}\n</code></pre>"},{"location":"types/#array","title":"Array","text":"<p>Arrays are comma-separated lists of one or more values in a specific order. For example, they're used in line dash arrays, in which the numbers specify intervals of line, break, and line again. If an array is used as an argument in an expression, the array must be wrapped in a <code>literal</code> expression.</p> <pre><code>{\n    \"line-dasharray\": [2, 4]\n}\n\n{\n    \"circle-color\": [\"in\", 1, [\"literal\", [1, 2, 3]]]\n}\n</code></pre>"},{"location":"types/#point","title":"Point","text":"<p>Points are two-element numeric arrays representing <code>[x, y]</code> coordinate pairs. Units and other interpretations of the x/y values depend on where and how the point type is used.</p> <pre><code>{\n    \"line-translate\": [2, 4]\n}\n</code></pre>"},{"location":"types/#enum","title":"Enum","text":"<p>Enums are a closed set of possible string values. Failing to provide a value within the closed set will result in an error.</p> <pre><code>{\n    \"circle-translate-anchor\": \"viewport\"\n}\n</code></pre>"},{"location":"types/#padding","title":"Padding","text":"SDK Support MapLibre GL JS MapLibre NativeAndroid MapLibre NativeiOS Single number 0.10.0 2.0.1 2.0.0 Array of numbers 2.2.0 11.5.0 6.7.0 <p>An array of numbers with syntax similar to CSS:</p> <ul> <li>A single value applies to all four sides, e.g. <code>[2]</code>;</li> <li>two values apply to [top/bottom, left/right], e.g. <code>[2, 3]</code>;</li> <li>three values apply to [top, left/right, bottom] e.g. <code>[2, 3, 1]</code>;</li> <li>four values apply to [top, right, bottom, left], e.g. <code>[2, 3, 1, 0]</code>.</li> </ul> <p>A single number is accepted for backwards-compatibility, and treated the same as a one-element array \u2014 padding applied to all sides.</p> <p>The following example applies 2em padding on top and bottom and 3em padding left and right.</p> <pre><code>{\n    \"icon-padding\": [2, 3]\n}\n</code></pre>"},{"location":"types/#projectiondefinition","title":"ProjectionDefinition","text":"<p>The <code>projection</code> is used to configure which projection to use for the map.</p> <p>There are currently two projections implemented.</p> <ul> <li><code>mercator</code> - Web Mercator projection</li> <li><code>vertical-perspective</code> - Vertical Perspective projection</li> </ul> <p>And the following presets</p> <p>The <code>projection</code> output sent to the renderer is always of the shape:</p> <p><code>[from, to, transition]: [string, string, number]</code></p> <ul> <li><code>from</code> is the projection of lower zoom level</li> <li><code>to</code> is the projection of higher zoom level</li> <li><code>transition</code> is the interpolation value, going from 0 to 1, with 0 being in the <code>from</code> projection, and 1 being in the <code>to</code> projection.</li> </ul> <p>In case <code>from</code> and <code>to</code> are equal, the <code>transition</code> will have no effect.</p>"},{"location":"types/#examples","title":"Examples","text":""},{"location":"types/#step-between-projection-at-discrete-zoom-levels","title":"Step between projection at discrete zoom levels","text":"<p>Use a <code>camera expression</code>, to discretely <code>step</code> between projections at certain zoom levels.</p> <pre><code>type: [\"step\", [\"zoom\"],\n    \"vertical-perspective\",\n    11, \"mercator\"\n]\n\n\noutput at zoom 10.9: \"vertical-perspective\"\noutput at zoom 11.0: \"vertical-perspective\"\noutput at zoom 11.1: \"mercator\"\n</code></pre>"},{"location":"types/#animate-between-different-projections-based-on-zoom-level","title":"Animate between different projections based on zoom level**","text":"<p>Use a <code>camera expression</code>, to animate between projections based on zoom, using <code>interpolate</code> function. The example below will yield an adaptive globe that interpolates from <code>vertical-perspective</code> to <code>mercator</code> between zoom 10 and 12.</p> <pre><code>type: [\"interpolate\", [\"linear\"], [\"zoom\"],\n    10,\"vertical-perspective\",\n    12,\"mercator\"\n]\n\n\noutput at zoom 9.9:  \"vertical-perspective\"\noutput at zoom 11:   [\"vertical-perspective\", \"mercator\", 0.5]\noutput at zoom 12:   [\"vertical-perspective\", \"mercator\", 1]\noutput at zoom 12.1: \"mercator\"\n</code></pre>"},{"location":"types/#provide-a-projection","title":"Provide a <code>projection</code>","text":"<pre><code>type: [\"vertical-perspective\", \"mercator\", 0.7]\n</code></pre>"},{"location":"types/#use-a-projection-preset","title":"Use a projection preset","text":"<p>There are also additional presets that yield commonly used expressions:</p> Preset Full value Description <code>globe</code> <code>[\"interpolate\", [\"linear\"], [\"zoom\"],</code><code>10, \"vertical-perspective\", 12, \"mercator\"]</code> Adaptive globe: interpolates from vertical-perspective to mercator projection between zoom levels 10 and 12."},{"location":"types/#numberarray","title":"<code>numberArray</code>","text":"<p>A single number value, or an array of number values.</p> <pre><code>{\n    \"hillshade-illumination-direction\": 24,\n    \"hillshade-illumination-direction\": [45, 57.3]\n}\n</code></pre>"},{"location":"types/#colorarray","title":"<code>colorArray</code>","text":"<p>A single color value, or an array of color values.</p> <pre><code>{\n    \"hillshade-highlight-color\": \"#ffff00\",\n    \"hillshade-highlight-color\": [\"#ffff00\", \"rgb(255, 255, 0)\", \"yellow\"]\n}\n</code></pre>"}]}